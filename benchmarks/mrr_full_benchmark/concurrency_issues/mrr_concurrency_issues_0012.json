{
  "bug_id": "MRR-CONCURRENCY_ISSUES-202508-0012",
  "category": "concurrency_issues",
  "subcategory": "data_race",
  "language": "python",
  "description": "Concurrency bug: data_race in multi-threaded code",
  "complexity": {
    "spatial_distribution": 35,
    "temporal_spread_months": 7,
    "abstraction_layers": 3,
    "obfuscation_level": "high",
    "cross_module_dependencies": 8,
    "artifact_types": 2
  },
  "code_snippets": {
    "buggy_code": "def buggy_function_data_race(data):\n    # Bug: data_race\n    result = []\n    for item in data:\n        # Buggy logic here\n        if item > 0:\n            result.append(item)\n    return result",
    "fixed_code": "def fixed_function_data_race(data):\n    # Fixed: data_race\n    result = []\n    for item in data:\n        # Fixed logic here\n        if item >= 0:\n            result.append(item)\n    return result"
  },
  "scattered_context": [
    {
      "file_path": "services/file_1.py",
      "content": "# Helper code for concurrency_issues\ndef helper(): pass",
      "relevance": "medium",
      "relationship": "calls",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        90,
        174
      ]
    },
    {
      "file_path": "services/file_2.py",
      "content": "class CriticalComponent:\n    def process(self, data):\n        # Critical logic related to concurrency_issues\n        if not self.validate(data):\n            raise ValueError(\"Invalid data\")\n        return self.transform(data)\n    \n    def validate(self, data):\n        # Validation logic\n        return data is not None",
      "relevance": "critical",
      "relationship": "calls",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        18
      ]
    },
    {
      "file_path": "services/file_3.py",
      "content": "# Helper code for concurrency_issues\ndef helper(): pass",
      "relevance": "low",
      "relationship": "extends",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        86,
        98
      ]
    },
    {
      "file_path": "core/file_4.py",
      "content": "# Helper code for concurrency_issues\ndef helper(): pass",
      "relevance": "medium",
      "relationship": "uses",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        49,
        162,
        92,
        69
      ]
    },
    {
      "file_path": "utils/file_5.py",
      "content": "# Helper code for concurrency_issues\ndef helper(): pass",
      "relevance": "low",
      "relationship": "implements",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        15,
        111,
        89,
        170
      ]
    },
    {
      "file_path": "utils/file_6.py",
      "content": "class CriticalComponent:\n    def process(self, data):\n        # Critical logic related to concurrency_issues\n        if not self.validate(data):\n            raise ValueError(\"Invalid data\")\n        return self.transform(data)\n    \n    def validate(self, data):\n        # Validation logic\n        return data is not None",
      "relevance": "critical",
      "relationship": "imports",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        162,
        62,
        54,
        193
      ]
    },
    {
      "file_path": "helpers/file_7.py",
      "content": "def important_function(param):\n    # Important logic for concurrency_issues\n    result = []\n    for item in param:\n        result.append(process_item(item))\n    return result",
      "relevance": "high",
      "relationship": "tests",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        77,
        164,
        169,
        40
      ]
    },
    {
      "file_path": "controllers/file_8.py",
      "content": "# Helper code for concurrency_issues\ndef helper(): pass",
      "relevance": "low",
      "relationship": "implements",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        142,
        120
      ]
    },
    {
      "file_path": "controllers/file_9.py",
      "content": "def important_function(param):\n    # Important logic for concurrency_issues\n    result = []\n    for item in param:\n        result.append(process_item(item))\n    return result",
      "relevance": "high",
      "relationship": "tests",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        58,
        135,
        78
      ]
    },
    {
      "file_path": "utils/file_10.py",
      "content": "def important_function(param):\n    # Important logic for concurrency_issues\n    result = []\n    for item in param:\n        result.append(process_item(item))\n    return result",
      "relevance": "high",
      "relationship": "uses",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        165
      ]
    },
    {
      "file_path": "utils/file_11.py",
      "content": "# Helper code for concurrency_issues\ndef helper(): pass",
      "relevance": "low",
      "relationship": "implements",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        200,
        98,
        149,
        158
      ]
    },
    {
      "file_path": "utils/file_12.py",
      "content": "def important_function(param):\n    # Important logic for concurrency_issues\n    result = []\n    for item in param:\n        result.append(process_item(item))\n    return result",
      "relevance": "high",
      "relationship": "tests",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        74,
        82,
        31
      ]
    },
    {
      "file_path": "utils/file_13.py",
      "content": "class CriticalComponent:\n    def process(self, data):\n        # Critical logic related to concurrency_issues\n        if not self.validate(data):\n            raise ValueError(\"Invalid data\")\n        return self.transform(data)\n    \n    def validate(self, data):\n        # Validation logic\n        return data is not None",
      "relevance": "critical",
      "relationship": "implements",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        62,
        26,
        13
      ]
    },
    {
      "file_path": "controllers/file_14.py",
      "content": "# Helper code for concurrency_issues\ndef helper(): pass",
      "relevance": "low",
      "relationship": "imports",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        51,
        152,
        116,
        131
      ]
    },
    {
      "file_path": "core/file_15.py",
      "content": "def important_function(param):\n    # Important logic for concurrency_issues\n    result = []\n    for item in param:\n        result.append(process_item(item))\n    return result",
      "relevance": "high",
      "relationship": "extends",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        15,
        11
      ]
    },
    {
      "file_path": "services/file_16.py",
      "content": "def important_function(param):\n    # Important logic for concurrency_issues\n    result = []\n    for item in param:\n        result.append(process_item(item))\n    return result",
      "relevance": "high",
      "relationship": "tests",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        25,
        184,
        90,
        10,
        84
      ]
    },
    {
      "file_path": "models/file_17.py",
      "content": "# Helper code for concurrency_issues\ndef helper(): pass",
      "relevance": "low",
      "relationship": "extends",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        34,
        87,
        192,
        199,
        36
      ]
    },
    {
      "file_path": "utils/file_18.py",
      "content": "# Helper code for concurrency_issues\ndef helper(): pass",
      "relevance": "low",
      "relationship": "implements",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        34
      ]
    },
    {
      "file_path": "services/file_19.py",
      "content": "def important_function(param):\n    # Important logic for concurrency_issues\n    result = []\n    for item in param:\n        result.append(process_item(item))\n    return result",
      "relevance": "high",
      "relationship": "extends",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        147,
        170,
        84,
        169
      ]
    },
    {
      "file_path": "utils/file_20.py",
      "content": "# Helper code for concurrency_issues\ndef helper(): pass",
      "relevance": "low",
      "relationship": "implements",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        28,
        83
      ]
    },
    {
      "file_path": "utils/file_21.py",
      "content": "# Helper code for concurrency_issues\ndef helper(): pass",
      "relevance": "low",
      "relationship": "calls",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        82,
        169,
        97,
        150,
        145
      ]
    },
    {
      "file_path": "helpers/file_22.py",
      "content": "def important_function(param):\n    # Important logic for concurrency_issues\n    result = []\n    for item in param:\n        result.append(process_item(item))\n    return result",
      "relevance": "high",
      "relationship": "imports",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        133,
        199,
        41
      ]
    },
    {
      "file_path": "controllers/file_23.py",
      "content": "class CriticalComponent:\n    def process(self, data):\n        # Critical logic related to concurrency_issues\n        if not self.validate(data):\n            raise ValueError(\"Invalid data\")\n        return self.transform(data)\n    \n    def validate(self, data):\n        # Validation logic\n        return data is not None",
      "relevance": "critical",
      "relationship": "tests",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        155,
        167,
        46,
        50
      ]
    },
    {
      "file_path": "helpers/file_24.py",
      "content": "# Helper code for concurrency_issues\ndef helper(): pass",
      "relevance": "low",
      "relationship": "calls",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        38,
        130,
        29,
        112
      ]
    },
    {
      "file_path": "models/file_25.py",
      "content": "class CriticalComponent:\n    def process(self, data):\n        # Critical logic related to concurrency_issues\n        if not self.validate(data):\n            raise ValueError(\"Invalid data\")\n        return self.transform(data)\n    \n    def validate(self, data):\n        # Validation logic\n        return data is not None",
      "relevance": "critical",
      "relationship": "tests",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        199,
        83
      ]
    },
    {
      "file_path": "helpers/file_26.py",
      "content": "def important_function(param):\n    # Important logic for concurrency_issues\n    result = []\n    for item in param:\n        result.append(process_item(item))\n    return result",
      "relevance": "high",
      "relationship": "imports",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        113,
        76,
        140
      ]
    },
    {
      "file_path": "core/file_27.py",
      "content": "# Helper code for concurrency_issues\ndef helper(): pass",
      "relevance": "medium",
      "relationship": "calls",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        193,
        110,
        28,
        67,
        79
      ]
    },
    {
      "file_path": "controllers/file_28.py",
      "content": "class CriticalComponent:\n    def process(self, data):\n        # Critical logic related to concurrency_issues\n        if not self.validate(data):\n            raise ValueError(\"Invalid data\")\n        return self.transform(data)\n    \n    def validate(self, data):\n        # Validation logic\n        return data is not None",
      "relevance": "critical",
      "relationship": "tests",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        47,
        182,
        140,
        126
      ]
    },
    {
      "file_path": "services/file_29.py",
      "content": "class CriticalComponent:\n    def process(self, data):\n        # Critical logic related to concurrency_issues\n        if not self.validate(data):\n            raise ValueError(\"Invalid data\")\n        return self.transform(data)\n    \n    def validate(self, data):\n        # Validation logic\n        return data is not None",
      "relevance": "critical",
      "relationship": "implements",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        148,
        81,
        147,
        94
      ]
    },
    {
      "file_path": "helpers/file_30.py",
      "content": "# Helper code for concurrency_issues\ndef helper(): pass",
      "relevance": "medium",
      "relationship": "tests",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        37
      ]
    },
    {
      "file_path": "utils/file_31.py",
      "content": "def important_function(param):\n    # Important logic for concurrency_issues\n    result = []\n    for item in param:\n        result.append(process_item(item))\n    return result",
      "relevance": "high",
      "relationship": "imports",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        45
      ]
    },
    {
      "file_path": "services/file_32.py",
      "content": "def important_function(param):\n    # Important logic for concurrency_issues\n    result = []\n    for item in param:\n        result.append(process_item(item))\n    return result",
      "relevance": "high",
      "relationship": "imports",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        151,
        23,
        84,
        193,
        187
      ]
    },
    {
      "file_path": "utils/file_33.py",
      "content": "def important_function(param):\n    # Important logic for concurrency_issues\n    result = []\n    for item in param:\n        result.append(process_item(item))\n    return result",
      "relevance": "high",
      "relationship": "imports",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        177,
        43,
        19,
        25,
        98
      ]
    },
    {
      "file_path": "utils/file_34.py",
      "content": "# Helper code for concurrency_issues\ndef helper(): pass",
      "relevance": "medium",
      "relationship": "tests",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        139
      ]
    },
    {
      "file_path": "helpers/file_35.py",
      "content": "class CriticalComponent:\n    def process(self, data):\n        # Critical logic related to concurrency_issues\n        if not self.validate(data):\n            raise ValueError(\"Invalid data\")\n        return self.transform(data)\n    \n    def validate(self, data):\n        # Validation logic\n        return data is not None",
      "relevance": "critical",
      "relationship": "uses",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        10,
        39,
        70
      ]
    }
  ],
  "temporal_info": {
    "bug_introduced": "2025-01-09",
    "temporal_spread_days": 210,
    "refactoring_events": 4,
    "related_commits": [
      {
        "hash": "5fd67fb9",
        "date": "2025-04-02",
        "message": "Refactored module 0",
        "files": [
          "file_0.py",
          "file_1.py",
          "file_2.py",
          "file_3.py"
        ]
      },
      {
        "hash": "94d3bf18",
        "date": "2025-03-03",
        "message": "Refactored module 1",
        "files": [
          "file_0.py",
          "file_1.py",
          "file_2.py"
        ]
      },
      {
        "hash": "b9169d7a",
        "date": "2025-05-29",
        "message": "Refactored module 2",
        "files": [
          "file_0.py",
          "file_1.py",
          "file_2.py",
          "file_3.py",
          "file_4.py"
        ]
      },
      {
        "hash": "d7263f20",
        "date": "2025-07-16",
        "message": "Refactored module 3",
        "files": [
          "file_0.py",
          "file_1.py",
          "file_2.py"
        ]
      },
      {
        "hash": "8416941f",
        "date": "2025-04-03",
        "message": "Refactored module 4",
        "files": [
          "file_0.py",
          "file_1.py",
          "file_2.py",
          "file_3.py"
        ]
      },
      {
        "hash": "edd0a651",
        "date": "2025-06-22",
        "message": "Refactored module 5",
        "files": [
          "file_0.py",
          "file_1.py",
          "file_2.py"
        ]
      },
      {
        "hash": "a67f5b4e",
        "date": "2025-03-08",
        "message": "Refactored module 6",
        "files": [
          "file_0.py",
          "file_1.py",
          "file_2.py",
          "file_3.py"
        ]
      }
    ]
  },
  "retrieval_paths": {
    "explicit": [
      {
        "from": "services/file_1.py",
        "to": "services/file_2.py",
        "type": "extends"
      },
      {
        "from": "services/file_2.py",
        "to": "services/file_3.py",
        "type": "calls"
      },
      {
        "from": "services/file_3.py",
        "to": "core/file_4.py",
        "type": "extends"
      },
      {
        "from": "core/file_4.py",
        "to": "utils/file_5.py",
        "type": "calls"
      },
      {
        "from": "utils/file_5.py",
        "to": "utils/file_6.py",
        "type": "imports"
      }
    ],
    "implicit": [
      {
        "files": [
          "utils/file_13.py",
          "services/file_1.py",
          "utils/file_18.py"
        ],
        "pattern": "shared_dependency"
      },
      {
        "files": [
          "core/file_15.py",
          "utils/file_20.py",
          "utils/file_33.py"
        ],
        "pattern": "shared_dependency"
      },
      {
        "files": [
          "helpers/file_30.py",
          "services/file_29.py",
          "helpers/file_24.py"
        ],
        "pattern": "shared_dependency"
      }
    ],
    "compositional": [
      {
        "path": [
          "controllers/file_8.py",
          "core/file_4.py"
        ],
        "depth": 1
      },
      {
        "path": [
          "helpers/file_26.py",
          "core/file_27.py",
          "utils/file_11.py"
        ],
        "depth": 2
      },
      {
        "path": [
          "helpers/file_7.py",
          "helpers/file_22.py",
          "utils/file_20.py",
          "services/file_3.py"
        ],
        "depth": 3
      }
    ]
  },
  "obfuscation": {
    "obfuscation_level": "high",
    "renamed_entities": {
      "entity_0": "yzqvZLdgTO",
      "entity_1": "iXEnOAYbqG",
      "entity_2": "xCBiVEdpYV",
      "entity_3": "kiESmoEnvm",
      "entity_4": "TgJegUqKqf",
      "entity_5": "peceAkWpLj",
      "entity_6": "kynyivRBIt",
      "entity_7": "IHctJNceWb",
      "entity_8": "EToaLpIwGF",
      "entity_9": "ltTMEhDENn",
      "entity_10": "OoqvHMXjCX",
      "entity_11": "iZIAVNGiwO",
      "entity_12": "GKTJLyhFcJ",
      "entity_13": "NSsfZOmPHj",
      "entity_14": "xiTcOCfsoi"
    },
    "moved_files": 1,
    "refactored_modules": 1
  },
  "ground_truth": {
    "root_cause": "data_race in main processing logic",
    "fix_type": "synchronization",
    "must_find_files": [
      "services/file_2.py",
      "utils/file_6.py",
      "helpers/file_7.py",
      "controllers/file_9.py",
      "utils/file_10.py"
    ],
    "should_find_files": [
      "services/file_1.py",
      "core/file_4.py",
      "core/file_27.py"
    ],
    "expected_behavior": {
      "should_not_error": true,
      "expected_output": "Correct processing result",
      "performance_threshold": 0.7874946288056623
    }
  },
  "test_artifacts": [
    {
      "file_name": "test_concurrency_issues_1.python",
      "test_code": "import unittest\n\nclass TestConcurrency_Issues(unittest.TestCase):\n    def test_scenario_1(self):\n        # Test for concurrency_issues\n        result = function_under_test(test_data)\n        self.assertEqual(result, expected_result)\n",
      "test_type": "e2e"
    },
    {
      "file_name": "test_concurrency_issues_2.python",
      "test_code": "import unittest\n\nclass TestConcurrency_Issues(unittest.TestCase):\n    def test_scenario_2(self):\n        # Test for concurrency_issues\n        result = function_under_test(test_data)\n        self.assertEqual(result, expected_result)\n",
      "test_type": "integration"
    }
  ],
  "error_artifacts": [
    {
      "error_type": "concurrency_issues",
      "error_message": "DeadlockError: Thread deadlock detected",
      "stack_trace": "Traceback (most recent call last):\n  File \"main.py\", line 42, in <module>\n    result = process_data(input_data)\n  File \"processor.py\", line 15, in process_data\n    return transform(validate(data))\n  File \"validator.py\", line 8, in validate\n    raise ValueError(\"Invalid data\")\nValueError: Invalid data",
      "timestamp": "2025-08-07T02:22:50.919064"
    }
  ],
  "symptoms": [
    "Intermittent failures",
    "Race condition symptoms",
    "Deadlock occurs"
  ],
  "error_location": {
    "file": "main.py",
    "line": 34,
    "function": "process_function",
    "module": "core"
  },
  "evaluation_criteria": {
    "must_find_files": [
      "services/file_2.py",
      "utils/file_6.py",
      "utils/file_13.py"
    ],
    "should_find_files": [
      "helpers/file_7.py",
      "controllers/file_9.py"
    ],
    "retrieval_threshold": 0.75,
    "fix_validation": "must_pass_tests"
  }
}