{
  "bug_id": "MRR-CONCURRENCY_ISSUES-202508-0166",
  "category": "concurrency_issues",
  "subcategory": "synchronization_bug",
  "language": "python",
  "description": "Concurrency bug: synchronization_bug in multi-threaded code",
  "complexity": {
    "spatial_distribution": 38,
    "temporal_spread_months": 4,
    "abstraction_layers": 3,
    "obfuscation_level": "high",
    "cross_module_dependencies": 9,
    "artifact_types": 4
  },
  "code_snippets": {
    "buggy_code": "def buggy_function_synchronization_bug(data):\n    # Bug: synchronization_bug\n    result = []\n    for item in data:\n        # Buggy logic here\n        if item > 0:\n            result.append(item)\n    return result",
    "fixed_code": "def fixed_function_synchronization_bug(data):\n    # Fixed: synchronization_bug\n    result = []\n    for item in data:\n        # Fixed logic here\n        if item >= 0:\n            result.append(item)\n    return result"
  },
  "scattered_context": [
    {
      "file_path": "core/file_1.py",
      "content": "def important_function(param):\n    # Important logic for concurrency_issues\n    result = []\n    for item in param:\n        result.append(process_item(item))\n    return result",
      "relevance": "high",
      "relationship": "extends",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        114,
        53,
        106,
        54
      ]
    },
    {
      "file_path": "controllers/file_2.py",
      "content": "def important_function(param):\n    # Important logic for concurrency_issues\n    result = []\n    for item in param:\n        result.append(process_item(item))\n    return result",
      "relevance": "high",
      "relationship": "uses",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        137,
        29,
        74,
        163
      ]
    },
    {
      "file_path": "controllers/file_3.py",
      "content": "# Helper code for concurrency_issues\ndef helper(): pass",
      "relevance": "medium",
      "relationship": "tests",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        78,
        25
      ]
    },
    {
      "file_path": "controllers/file_4.py",
      "content": "def important_function(param):\n    # Important logic for concurrency_issues\n    result = []\n    for item in param:\n        result.append(process_item(item))\n    return result",
      "relevance": "high",
      "relationship": "extends",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        39,
        142
      ]
    },
    {
      "file_path": "services/file_5.py",
      "content": "# Helper code for concurrency_issues\ndef helper(): pass",
      "relevance": "low",
      "relationship": "implements",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        132,
        150,
        165,
        163,
        179
      ]
    },
    {
      "file_path": "models/file_6.py",
      "content": "class CriticalComponent:\n    def process(self, data):\n        # Critical logic related to concurrency_issues\n        if not self.validate(data):\n            raise ValueError(\"Invalid data\")\n        return self.transform(data)\n    \n    def validate(self, data):\n        # Validation logic\n        return data is not None",
      "relevance": "critical",
      "relationship": "implements",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        12
      ]
    },
    {
      "file_path": "models/file_7.py",
      "content": "class CriticalComponent:\n    def process(self, data):\n        # Critical logic related to concurrency_issues\n        if not self.validate(data):\n            raise ValueError(\"Invalid data\")\n        return self.transform(data)\n    \n    def validate(self, data):\n        # Validation logic\n        return data is not None",
      "relevance": "critical",
      "relationship": "tests",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        27,
        75,
        153
      ]
    },
    {
      "file_path": "services/file_8.py",
      "content": "def important_function(param):\n    # Important logic for concurrency_issues\n    result = []\n    for item in param:\n        result.append(process_item(item))\n    return result",
      "relevance": "high",
      "relationship": "tests",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        19,
        169,
        100,
        104
      ]
    },
    {
      "file_path": "helpers/file_9.py",
      "content": "def important_function(param):\n    # Important logic for concurrency_issues\n    result = []\n    for item in param:\n        result.append(process_item(item))\n    return result",
      "relevance": "high",
      "relationship": "implements",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        166,
        148,
        15,
        108,
        95
      ]
    },
    {
      "file_path": "controllers/file_10.py",
      "content": "# Helper code for concurrency_issues\ndef helper(): pass",
      "relevance": "medium",
      "relationship": "implements",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        196,
        97,
        113,
        127
      ]
    },
    {
      "file_path": "core/file_11.py",
      "content": "def important_function(param):\n    # Important logic for concurrency_issues\n    result = []\n    for item in param:\n        result.append(process_item(item))\n    return result",
      "relevance": "high",
      "relationship": "tests",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        168
      ]
    },
    {
      "file_path": "models/file_12.py",
      "content": "class CriticalComponent:\n    def process(self, data):\n        # Critical logic related to concurrency_issues\n        if not self.validate(data):\n            raise ValueError(\"Invalid data\")\n        return self.transform(data)\n    \n    def validate(self, data):\n        # Validation logic\n        return data is not None",
      "relevance": "critical",
      "relationship": "uses",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        63,
        117,
        91
      ]
    },
    {
      "file_path": "controllers/file_13.py",
      "content": "class CriticalComponent:\n    def process(self, data):\n        # Critical logic related to concurrency_issues\n        if not self.validate(data):\n            raise ValueError(\"Invalid data\")\n        return self.transform(data)\n    \n    def validate(self, data):\n        # Validation logic\n        return data is not None",
      "relevance": "critical",
      "relationship": "imports",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        171,
        107,
        50,
        14
      ]
    },
    {
      "file_path": "core/file_14.py",
      "content": "def important_function(param):\n    # Important logic for concurrency_issues\n    result = []\n    for item in param:\n        result.append(process_item(item))\n    return result",
      "relevance": "high",
      "relationship": "uses",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        98,
        75,
        83
      ]
    },
    {
      "file_path": "controllers/file_15.py",
      "content": "# Helper code for concurrency_issues\ndef helper(): pass",
      "relevance": "low",
      "relationship": "calls",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        59,
        73,
        198,
        103,
        77
      ]
    },
    {
      "file_path": "helpers/file_16.py",
      "content": "# Helper code for concurrency_issues\ndef helper(): pass",
      "relevance": "low",
      "relationship": "imports",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        81,
        194,
        161
      ]
    },
    {
      "file_path": "helpers/file_17.py",
      "content": "class CriticalComponent:\n    def process(self, data):\n        # Critical logic related to concurrency_issues\n        if not self.validate(data):\n            raise ValueError(\"Invalid data\")\n        return self.transform(data)\n    \n    def validate(self, data):\n        # Validation logic\n        return data is not None",
      "relevance": "critical",
      "relationship": "extends",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        76,
        96
      ]
    },
    {
      "file_path": "services/file_18.py",
      "content": "# Helper code for concurrency_issues\ndef helper(): pass",
      "relevance": "low",
      "relationship": "imports",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        129,
        168
      ]
    },
    {
      "file_path": "models/file_19.py",
      "content": "def important_function(param):\n    # Important logic for concurrency_issues\n    result = []\n    for item in param:\n        result.append(process_item(item))\n    return result",
      "relevance": "high",
      "relationship": "tests",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        65
      ]
    },
    {
      "file_path": "utils/file_20.py",
      "content": "# Helper code for concurrency_issues\ndef helper(): pass",
      "relevance": "medium",
      "relationship": "implements",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        162
      ]
    },
    {
      "file_path": "helpers/file_21.py",
      "content": "# Helper code for concurrency_issues\ndef helper(): pass",
      "relevance": "low",
      "relationship": "imports",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        12
      ]
    },
    {
      "file_path": "helpers/file_22.py",
      "content": "def important_function(param):\n    # Important logic for concurrency_issues\n    result = []\n    for item in param:\n        result.append(process_item(item))\n    return result",
      "relevance": "high",
      "relationship": "uses",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        118,
        167,
        158,
        42
      ]
    },
    {
      "file_path": "core/file_23.py",
      "content": "class CriticalComponent:\n    def process(self, data):\n        # Critical logic related to concurrency_issues\n        if not self.validate(data):\n            raise ValueError(\"Invalid data\")\n        return self.transform(data)\n    \n    def validate(self, data):\n        # Validation logic\n        return data is not None",
      "relevance": "critical",
      "relationship": "extends",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        99,
        130
      ]
    },
    {
      "file_path": "helpers/file_24.py",
      "content": "# Helper code for concurrency_issues\ndef helper(): pass",
      "relevance": "medium",
      "relationship": "imports",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        16,
        108
      ]
    },
    {
      "file_path": "models/file_25.py",
      "content": "class CriticalComponent:\n    def process(self, data):\n        # Critical logic related to concurrency_issues\n        if not self.validate(data):\n            raise ValueError(\"Invalid data\")\n        return self.transform(data)\n    \n    def validate(self, data):\n        # Validation logic\n        return data is not None",
      "relevance": "critical",
      "relationship": "imports",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        105,
        114
      ]
    },
    {
      "file_path": "utils/file_26.py",
      "content": "def important_function(param):\n    # Important logic for concurrency_issues\n    result = []\n    for item in param:\n        result.append(process_item(item))\n    return result",
      "relevance": "high",
      "relationship": "calls",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        62,
        133
      ]
    },
    {
      "file_path": "helpers/file_27.py",
      "content": "def important_function(param):\n    # Important logic for concurrency_issues\n    result = []\n    for item in param:\n        result.append(process_item(item))\n    return result",
      "relevance": "high",
      "relationship": "implements",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        35
      ]
    },
    {
      "file_path": "utils/file_28.py",
      "content": "# Helper code for concurrency_issues\ndef helper(): pass",
      "relevance": "low",
      "relationship": "imports",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        112,
        55,
        157,
        152,
        33
      ]
    },
    {
      "file_path": "helpers/file_29.py",
      "content": "# Helper code for concurrency_issues\ndef helper(): pass",
      "relevance": "low",
      "relationship": "extends",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        135,
        109,
        153,
        144
      ]
    },
    {
      "file_path": "services/file_30.py",
      "content": "# Helper code for concurrency_issues\ndef helper(): pass",
      "relevance": "medium",
      "relationship": "uses",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        38,
        167,
        191
      ]
    },
    {
      "file_path": "services/file_31.py",
      "content": "# Helper code for concurrency_issues\ndef helper(): pass",
      "relevance": "low",
      "relationship": "tests",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        43,
        200,
        61,
        118,
        173
      ]
    },
    {
      "file_path": "core/file_32.py",
      "content": "def important_function(param):\n    # Important logic for concurrency_issues\n    result = []\n    for item in param:\n        result.append(process_item(item))\n    return result",
      "relevance": "high",
      "relationship": "calls",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        59
      ]
    },
    {
      "file_path": "helpers/file_33.py",
      "content": "# Helper code for concurrency_issues\ndef helper(): pass",
      "relevance": "low",
      "relationship": "implements",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        86,
        172,
        72
      ]
    },
    {
      "file_path": "utils/file_34.py",
      "content": "def important_function(param):\n    # Important logic for concurrency_issues\n    result = []\n    for item in param:\n        result.append(process_item(item))\n    return result",
      "relevance": "high",
      "relationship": "tests",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        87,
        156
      ]
    },
    {
      "file_path": "services/file_35.py",
      "content": "# Helper code for concurrency_issues\ndef helper(): pass",
      "relevance": "low",
      "relationship": "implements",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        167,
        47,
        183
      ]
    },
    {
      "file_path": "controllers/file_36.py",
      "content": "# Helper code for concurrency_issues\ndef helper(): pass",
      "relevance": "low",
      "relationship": "uses",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        86,
        33,
        32,
        83
      ]
    },
    {
      "file_path": "core/file_37.py",
      "content": "def important_function(param):\n    # Important logic for concurrency_issues\n    result = []\n    for item in param:\n        result.append(process_item(item))\n    return result",
      "relevance": "high",
      "relationship": "tests",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        141,
        13,
        130,
        108
      ]
    },
    {
      "file_path": "services/file_38.py",
      "content": "class CriticalComponent:\n    def process(self, data):\n        # Critical logic related to concurrency_issues\n        if not self.validate(data):\n            raise ValueError(\"Invalid data\")\n        return self.transform(data)\n    \n    def validate(self, data):\n        # Validation logic\n        return data is not None",
      "relevance": "critical",
      "relationship": "calls",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        154,
        145,
        25
      ]
    }
  ],
  "temporal_info": {
    "bug_introduced": "2025-04-09",
    "temporal_spread_days": 120,
    "refactoring_events": 2,
    "related_commits": [
      {
        "hash": "5fd67fb9",
        "date": "2025-07-16",
        "message": "Refactored module 0",
        "files": [
          "file_0.py",
          "file_1.py"
        ]
      },
      {
        "hash": "94d3bf18",
        "date": "2025-05-15",
        "message": "Refactored module 1",
        "files": [
          "file_0.py",
          "file_1.py"
        ]
      },
      {
        "hash": "b9169d7a",
        "date": "2025-05-23",
        "message": "Refactored module 2",
        "files": [
          "file_0.py"
        ]
      }
    ]
  },
  "retrieval_paths": {
    "explicit": [
      {
        "from": "core/file_1.py",
        "to": "controllers/file_2.py",
        "type": "imports"
      },
      {
        "from": "controllers/file_2.py",
        "to": "controllers/file_3.py",
        "type": "extends"
      },
      {
        "from": "controllers/file_3.py",
        "to": "controllers/file_4.py",
        "type": "imports"
      },
      {
        "from": "controllers/file_4.py",
        "to": "services/file_5.py",
        "type": "imports"
      },
      {
        "from": "services/file_5.py",
        "to": "models/file_6.py",
        "type": "imports"
      }
    ],
    "implicit": [
      {
        "files": [
          "controllers/file_2.py",
          "services/file_31.py",
          "models/file_19.py"
        ],
        "pattern": "shared_dependency"
      },
      {
        "files": [
          "helpers/file_17.py",
          "controllers/file_15.py",
          "helpers/file_21.py"
        ],
        "pattern": "shared_dependency"
      },
      {
        "files": [
          "controllers/file_3.py",
          "helpers/file_29.py",
          "controllers/file_10.py"
        ],
        "pattern": "shared_dependency"
      }
    ],
    "compositional": [
      {
        "path": [
          "models/file_19.py",
          "helpers/file_27.py"
        ],
        "depth": 1
      },
      {
        "path": [
          "models/file_7.py",
          "services/file_31.py",
          "controllers/file_36.py"
        ],
        "depth": 2
      },
      {
        "path": [
          "core/file_14.py",
          "core/file_11.py",
          "models/file_25.py",
          "services/file_35.py"
        ],
        "depth": 3
      }
    ]
  },
  "obfuscation": {
    "obfuscation_level": "high",
    "renamed_entities": {
      "entity_0": "iZOnmkkLAI",
      "entity_1": "EjPkhFYIYv",
      "entity_2": "YyJkidPuSy",
      "entity_3": "wQjalIkRSr",
      "entity_4": "vqBlZDbvMe",
      "entity_5": "unulzqWQsw",
      "entity_6": "vLeNSdhpwL",
      "entity_7": "yeyUIrUzCn",
      "entity_8": "TFHQQtbaET"
    },
    "moved_files": 0,
    "refactored_modules": 1
  },
  "ground_truth": {
    "root_cause": "synchronization_bug in main processing logic",
    "fix_type": "synchronization",
    "must_find_files": [
      "core/file_1.py",
      "controllers/file_2.py",
      "controllers/file_4.py",
      "models/file_6.py",
      "models/file_7.py"
    ],
    "should_find_files": [
      "controllers/file_3.py",
      "controllers/file_10.py",
      "utils/file_20.py"
    ],
    "expected_behavior": {
      "should_not_error": true,
      "expected_output": "Correct processing result",
      "performance_threshold": 1.2352958730846029
    }
  },
  "test_artifacts": [
    {
      "file_name": "test_concurrency_issues_1.python",
      "test_code": "import unittest\n\nclass TestConcurrency_Issues(unittest.TestCase):\n    def test_scenario_1(self):\n        # Test for concurrency_issues\n        result = function_under_test(test_data)\n        self.assertEqual(result, expected_result)\n",
      "test_type": "unit"
    },
    {
      "file_name": "test_concurrency_issues_2.python",
      "test_code": "import unittest\n\nclass TestConcurrency_Issues(unittest.TestCase):\n    def test_scenario_2(self):\n        # Test for concurrency_issues\n        result = function_under_test(test_data)\n        self.assertEqual(result, expected_result)\n",
      "test_type": "integration"
    },
    {
      "file_name": "test_concurrency_issues_3.python",
      "test_code": "import unittest\n\nclass TestConcurrency_Issues(unittest.TestCase):\n    def test_scenario_3(self):\n        # Test for concurrency_issues\n        result = function_under_test(test_data)\n        self.assertEqual(result, expected_result)\n",
      "test_type": "e2e"
    }
  ],
  "error_artifacts": [
    {
      "error_type": "concurrency_issues",
      "error_message": "DeadlockError: Thread deadlock detected",
      "stack_trace": "Traceback (most recent call last):\n  File \"main.py\", line 42, in <module>\n    result = process_data(input_data)\n  File \"processor.py\", line 15, in process_data\n    return transform(validate(data))\n  File \"validator.py\", line 8, in validate\n    raise ValueError(\"Invalid data\")\nValueError: Invalid data",
      "timestamp": "2025-08-07T02:22:51.005528"
    },
    {
      "error_type": "concurrency_issues",
      "error_message": "DeadlockError: Thread deadlock detected",
      "stack_trace": "Traceback (most recent call last):\n  File \"main.py\", line 42, in <module>\n    result = process_data(input_data)\n  File \"processor.py\", line 15, in process_data\n    return transform(validate(data))\n  File \"validator.py\", line 8, in validate\n    raise ValueError(\"Invalid data\")\nValueError: Invalid data",
      "timestamp": "2025-08-07T02:22:51.005530"
    }
  ],
  "symptoms": [
    "Intermittent failures",
    "Race condition symptoms",
    "Deadlock occurs"
  ],
  "error_location": {
    "file": "main.py",
    "line": 200,
    "function": "process_function",
    "module": "utils"
  },
  "evaluation_criteria": {
    "must_find_files": [
      "models/file_6.py",
      "models/file_7.py",
      "models/file_12.py"
    ],
    "should_find_files": [
      "core/file_1.py",
      "controllers/file_2.py"
    ],
    "retrieval_threshold": 0.75,
    "fix_validation": "must_pass_tests"
  }
}