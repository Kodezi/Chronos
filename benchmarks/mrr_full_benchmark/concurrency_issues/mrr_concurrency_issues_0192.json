{
  "bug_id": "MRR-CONCURRENCY_ISSUES-202508-0192",
  "category": "concurrency_issues",
  "subcategory": "race_condition",
  "language": "python",
  "description": "Concurrency bug: race_condition in multi-threaded code",
  "complexity": {
    "spatial_distribution": 34,
    "temporal_spread_months": 8,
    "abstraction_layers": 5,
    "obfuscation_level": "high",
    "cross_module_dependencies": 8,
    "artifact_types": 3
  },
  "code_snippets": {
    "buggy_code": "class Counter:\n    def __init__(self):\n        self.count = 0\n    \n    def increment(self):\n        self.count += 1",
    "fixed_code": "import threading\n\nclass Counter:\n    def __init__(self):\n        self.count = 0\n        self.lock = threading.Lock()\n    \n    def increment(self):\n        with self.lock:\n            self.count += 1"
  },
  "scattered_context": [
    {
      "file_path": "controllers/file_1.py",
      "content": "# Helper code for concurrency_issues\ndef helper(): pass",
      "relevance": "medium",
      "relationship": "uses",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        82,
        124,
        72,
        77
      ]
    },
    {
      "file_path": "controllers/file_2.py",
      "content": "# Helper code for concurrency_issues\ndef helper(): pass",
      "relevance": "low",
      "relationship": "imports",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        39,
        42,
        132
      ]
    },
    {
      "file_path": "helpers/file_3.py",
      "content": "class CriticalComponent:\n    def process(self, data):\n        # Critical logic related to concurrency_issues\n        if not self.validate(data):\n            raise ValueError(\"Invalid data\")\n        return self.transform(data)\n    \n    def validate(self, data):\n        # Validation logic\n        return data is not None",
      "relevance": "critical",
      "relationship": "calls",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        176,
        110,
        157
      ]
    },
    {
      "file_path": "controllers/file_4.py",
      "content": "def important_function(param):\n    # Important logic for concurrency_issues\n    result = []\n    for item in param:\n        result.append(process_item(item))\n    return result",
      "relevance": "high",
      "relationship": "extends",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        57,
        98,
        104
      ]
    },
    {
      "file_path": "controllers/file_5.py",
      "content": "# Helper code for concurrency_issues\ndef helper(): pass",
      "relevance": "medium",
      "relationship": "implements",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        182,
        30,
        166,
        97,
        74
      ]
    },
    {
      "file_path": "models/file_6.py",
      "content": "# Helper code for concurrency_issues\ndef helper(): pass",
      "relevance": "low",
      "relationship": "uses",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        38
      ]
    },
    {
      "file_path": "services/file_7.py",
      "content": "class CriticalComponent:\n    def process(self, data):\n        # Critical logic related to concurrency_issues\n        if not self.validate(data):\n            raise ValueError(\"Invalid data\")\n        return self.transform(data)\n    \n    def validate(self, data):\n        # Validation logic\n        return data is not None",
      "relevance": "critical",
      "relationship": "extends",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        40,
        106,
        178
      ]
    },
    {
      "file_path": "models/file_8.py",
      "content": "def important_function(param):\n    # Important logic for concurrency_issues\n    result = []\n    for item in param:\n        result.append(process_item(item))\n    return result",
      "relevance": "high",
      "relationship": "imports",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        52,
        87,
        180,
        76
      ]
    },
    {
      "file_path": "models/file_9.py",
      "content": "# Helper code for concurrency_issues\ndef helper(): pass",
      "relevance": "low",
      "relationship": "extends",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        142,
        113,
        106,
        153
      ]
    },
    {
      "file_path": "controllers/file_10.py",
      "content": "# Helper code for concurrency_issues\ndef helper(): pass",
      "relevance": "low",
      "relationship": "imports",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        85,
        80,
        121
      ]
    },
    {
      "file_path": "utils/file_11.py",
      "content": "class CriticalComponent:\n    def process(self, data):\n        # Critical logic related to concurrency_issues\n        if not self.validate(data):\n            raise ValueError(\"Invalid data\")\n        return self.transform(data)\n    \n    def validate(self, data):\n        # Validation logic\n        return data is not None",
      "relevance": "critical",
      "relationship": "extends",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        54,
        154,
        134,
        200
      ]
    },
    {
      "file_path": "core/file_12.py",
      "content": "# Helper code for concurrency_issues\ndef helper(): pass",
      "relevance": "low",
      "relationship": "uses",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        81,
        111,
        126,
        142,
        21
      ]
    },
    {
      "file_path": "controllers/file_13.py",
      "content": "# Helper code for concurrency_issues\ndef helper(): pass",
      "relevance": "medium",
      "relationship": "imports",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        144,
        176
      ]
    },
    {
      "file_path": "models/file_14.py",
      "content": "def important_function(param):\n    # Important logic for concurrency_issues\n    result = []\n    for item in param:\n        result.append(process_item(item))\n    return result",
      "relevance": "high",
      "relationship": "implements",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        12,
        38,
        160,
        79
      ]
    },
    {
      "file_path": "controllers/file_15.py",
      "content": "# Helper code for concurrency_issues\ndef helper(): pass",
      "relevance": "medium",
      "relationship": "imports",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        103,
        156,
        168
      ]
    },
    {
      "file_path": "services/file_16.py",
      "content": "class CriticalComponent:\n    def process(self, data):\n        # Critical logic related to concurrency_issues\n        if not self.validate(data):\n            raise ValueError(\"Invalid data\")\n        return self.transform(data)\n    \n    def validate(self, data):\n        # Validation logic\n        return data is not None",
      "relevance": "critical",
      "relationship": "uses",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        60,
        49,
        99,
        121,
        175
      ]
    },
    {
      "file_path": "controllers/file_17.py",
      "content": "# Helper code for concurrency_issues\ndef helper(): pass",
      "relevance": "medium",
      "relationship": "tests",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        127,
        147,
        26
      ]
    },
    {
      "file_path": "controllers/file_18.py",
      "content": "# Helper code for concurrency_issues\ndef helper(): pass",
      "relevance": "medium",
      "relationship": "uses",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        149,
        151,
        70,
        196
      ]
    },
    {
      "file_path": "services/file_19.py",
      "content": "# Helper code for concurrency_issues\ndef helper(): pass",
      "relevance": "medium",
      "relationship": "calls",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        64,
        46,
        55
      ]
    },
    {
      "file_path": "core/file_20.py",
      "content": "def important_function(param):\n    # Important logic for concurrency_issues\n    result = []\n    for item in param:\n        result.append(process_item(item))\n    return result",
      "relevance": "high",
      "relationship": "extends",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        155,
        118,
        95
      ]
    },
    {
      "file_path": "core/file_21.py",
      "content": "def important_function(param):\n    # Important logic for concurrency_issues\n    result = []\n    for item in param:\n        result.append(process_item(item))\n    return result",
      "relevance": "high",
      "relationship": "extends",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        139,
        125,
        182,
        161
      ]
    },
    {
      "file_path": "core/file_22.py",
      "content": "# Helper code for concurrency_issues\ndef helper(): pass",
      "relevance": "medium",
      "relationship": "tests",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        143,
        72
      ]
    },
    {
      "file_path": "models/file_23.py",
      "content": "class CriticalComponent:\n    def process(self, data):\n        # Critical logic related to concurrency_issues\n        if not self.validate(data):\n            raise ValueError(\"Invalid data\")\n        return self.transform(data)\n    \n    def validate(self, data):\n        # Validation logic\n        return data is not None",
      "relevance": "critical",
      "relationship": "imports",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        34,
        197,
        192,
        105
      ]
    },
    {
      "file_path": "models/file_24.py",
      "content": "def important_function(param):\n    # Important logic for concurrency_issues\n    result = []\n    for item in param:\n        result.append(process_item(item))\n    return result",
      "relevance": "high",
      "relationship": "implements",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        163,
        162,
        114,
        171
      ]
    },
    {
      "file_path": "services/file_25.py",
      "content": "# Helper code for concurrency_issues\ndef helper(): pass",
      "relevance": "low",
      "relationship": "extends",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        161,
        17,
        161
      ]
    },
    {
      "file_path": "models/file_26.py",
      "content": "class CriticalComponent:\n    def process(self, data):\n        # Critical logic related to concurrency_issues\n        if not self.validate(data):\n            raise ValueError(\"Invalid data\")\n        return self.transform(data)\n    \n    def validate(self, data):\n        # Validation logic\n        return data is not None",
      "relevance": "critical",
      "relationship": "implements",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        57,
        22,
        62,
        71
      ]
    },
    {
      "file_path": "models/file_27.py",
      "content": "class CriticalComponent:\n    def process(self, data):\n        # Critical logic related to concurrency_issues\n        if not self.validate(data):\n            raise ValueError(\"Invalid data\")\n        return self.transform(data)\n    \n    def validate(self, data):\n        # Validation logic\n        return data is not None",
      "relevance": "critical",
      "relationship": "extends",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        98
      ]
    },
    {
      "file_path": "helpers/file_28.py",
      "content": "# Helper code for concurrency_issues\ndef helper(): pass",
      "relevance": "medium",
      "relationship": "imports",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        18,
        33,
        57,
        65
      ]
    },
    {
      "file_path": "utils/file_29.py",
      "content": "# Helper code for concurrency_issues\ndef helper(): pass",
      "relevance": "medium",
      "relationship": "uses",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        41
      ]
    },
    {
      "file_path": "core/file_30.py",
      "content": "def important_function(param):\n    # Important logic for concurrency_issues\n    result = []\n    for item in param:\n        result.append(process_item(item))\n    return result",
      "relevance": "high",
      "relationship": "extends",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        10
      ]
    },
    {
      "file_path": "controllers/file_31.py",
      "content": "# Helper code for concurrency_issues\ndef helper(): pass",
      "relevance": "low",
      "relationship": "imports",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        149,
        29,
        33
      ]
    },
    {
      "file_path": "services/file_32.py",
      "content": "# Helper code for concurrency_issues\ndef helper(): pass",
      "relevance": "low",
      "relationship": "extends",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        139
      ]
    },
    {
      "file_path": "services/file_33.py",
      "content": "def important_function(param):\n    # Important logic for concurrency_issues\n    result = []\n    for item in param:\n        result.append(process_item(item))\n    return result",
      "relevance": "high",
      "relationship": "tests",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        16
      ]
    },
    {
      "file_path": "utils/file_34.py",
      "content": "# Helper code for concurrency_issues\ndef helper(): pass",
      "relevance": "medium",
      "relationship": "uses",
      "specific_issue": "Related to concurrency_issues issue",
      "line_numbers": [
        152,
        178,
        180,
        14,
        123
      ]
    }
  ],
  "temporal_info": {
    "bug_introduced": "2024-12-10",
    "temporal_spread_days": 240,
    "refactoring_events": 0,
    "related_commits": [
      {
        "hash": "5fd67fb9",
        "date": "2024-12-11",
        "message": "Refactored module 0",
        "files": [
          "file_0.py",
          "file_1.py",
          "file_2.py"
        ]
      },
      {
        "hash": "94d3bf18",
        "date": "2025-01-31",
        "message": "Refactored module 1",
        "files": [
          "file_0.py",
          "file_1.py",
          "file_2.py"
        ]
      },
      {
        "hash": "b9169d7a",
        "date": "2025-04-12",
        "message": "Refactored module 2",
        "files": [
          "file_0.py",
          "file_1.py"
        ]
      },
      {
        "hash": "d7263f20",
        "date": "2025-03-14",
        "message": "Refactored module 3",
        "files": [
          "file_0.py",
          "file_1.py",
          "file_2.py"
        ]
      },
      {
        "hash": "8416941f",
        "date": "2025-01-31",
        "message": "Refactored module 4",
        "files": [
          "file_0.py",
          "file_1.py"
        ]
      },
      {
        "hash": "edd0a651",
        "date": "2025-02-09",
        "message": "Refactored module 5",
        "files": [
          "file_0.py"
        ]
      },
      {
        "hash": "a67f5b4e",
        "date": "2025-01-17",
        "message": "Refactored module 6",
        "files": [
          "file_0.py",
          "file_1.py"
        ]
      },
      {
        "hash": "e32a385c",
        "date": "2025-07-07",
        "message": "Refactored module 7",
        "files": [
          "file_0.py",
          "file_1.py"
        ]
      },
      {
        "hash": "740b3cf2",
        "date": "2025-02-03",
        "message": "Refactored module 8",
        "files": [
          "file_0.py",
          "file_1.py",
          "file_2.py",
          "file_3.py",
          "file_4.py"
        ]
      }
    ]
  },
  "retrieval_paths": {
    "explicit": [
      {
        "from": "controllers/file_1.py",
        "to": "controllers/file_2.py",
        "type": "imports"
      },
      {
        "from": "controllers/file_2.py",
        "to": "helpers/file_3.py",
        "type": "calls"
      },
      {
        "from": "helpers/file_3.py",
        "to": "controllers/file_4.py",
        "type": "extends"
      },
      {
        "from": "controllers/file_4.py",
        "to": "controllers/file_5.py",
        "type": "calls"
      },
      {
        "from": "controllers/file_5.py",
        "to": "models/file_6.py",
        "type": "extends"
      }
    ],
    "implicit": [
      {
        "files": [
          "helpers/file_3.py",
          "controllers/file_2.py",
          "models/file_6.py"
        ],
        "pattern": "shared_dependency"
      },
      {
        "files": [
          "models/file_9.py",
          "models/file_14.py",
          "services/file_32.py"
        ],
        "pattern": "shared_dependency"
      },
      {
        "files": [
          "core/file_12.py",
          "controllers/file_15.py",
          "services/file_16.py"
        ],
        "pattern": "shared_dependency"
      }
    ],
    "compositional": [
      {
        "path": [
          "core/file_22.py",
          "models/file_26.py"
        ],
        "depth": 1
      },
      {
        "path": [
          "core/file_22.py",
          "utils/file_34.py",
          "core/file_12.py"
        ],
        "depth": 2
      },
      {
        "path": [
          "services/file_33.py",
          "utils/file_11.py",
          "controllers/file_18.py",
          "controllers/file_5.py"
        ],
        "depth": 3
      },
      {
        "path": [
          "utils/file_29.py",
          "services/file_7.py",
          "controllers/file_13.py",
          "models/file_23.py",
          "models/file_24.py"
        ],
        "depth": 4
      },
      {
        "path": [
          "helpers/file_3.py",
          "models/file_23.py",
          "helpers/file_28.py",
          "core/file_22.py",
          "controllers/file_17.py",
          "models/file_9.py"
        ],
        "depth": 5
      }
    ]
  },
  "obfuscation": {
    "obfuscation_level": "high",
    "renamed_entities": {
      "entity_0": "AriPIUivCE",
      "entity_1": "EfRKvNCztf",
      "entity_2": "ipzoLTjwzt",
      "entity_3": "SDzFbzodeE",
      "entity_4": "gflHLkuizh",
      "entity_5": "bGAYrydgPQ",
      "entity_6": "cySuWSZxHx",
      "entity_7": "ePGGWNLgiT",
      "entity_8": "SjWHbYHZqs",
      "entity_9": "fALbnLtGEC",
      "entity_10": "vkBsCeNvPY",
      "entity_11": "KtozkZHUDF",
      "entity_12": "YsgjkXJtRZ"
    },
    "moved_files": 2,
    "refactored_modules": 0
  },
  "ground_truth": {
    "root_cause": "race_condition in main processing logic",
    "fix_type": "synchronization",
    "must_find_files": [
      "helpers/file_3.py",
      "controllers/file_4.py",
      "services/file_7.py",
      "models/file_8.py",
      "utils/file_11.py"
    ],
    "should_find_files": [
      "controllers/file_1.py",
      "controllers/file_5.py",
      "controllers/file_13.py"
    ],
    "expected_behavior": {
      "should_not_error": true,
      "expected_output": "Correct processing result",
      "performance_threshold": 0.5199490964826069
    }
  },
  "test_artifacts": [
    {
      "file_name": "test_concurrency_issues_1.python",
      "test_code": "import unittest\n\nclass TestConcurrency_Issues(unittest.TestCase):\n    def test_scenario_1(self):\n        # Test for concurrency_issues\n        result = function_under_test(test_data)\n        self.assertEqual(result, expected_result)\n",
      "test_type": "e2e"
    },
    {
      "file_name": "test_concurrency_issues_2.python",
      "test_code": "import unittest\n\nclass TestConcurrency_Issues(unittest.TestCase):\n    def test_scenario_2(self):\n        # Test for concurrency_issues\n        result = function_under_test(test_data)\n        self.assertEqual(result, expected_result)\n",
      "test_type": "unit"
    }
  ],
  "error_artifacts": [
    {
      "error_type": "concurrency_issues",
      "error_message": "DeadlockError: Thread deadlock detected",
      "stack_trace": "Traceback (most recent call last):\n  File \"main.py\", line 42, in <module>\n    result = process_data(input_data)\n  File \"processor.py\", line 15, in process_data\n    return transform(validate(data))\n  File \"validator.py\", line 8, in validate\n    raise ValueError(\"Invalid data\")\nValueError: Invalid data",
      "timestamp": "2025-08-07T02:22:51.020524"
    },
    {
      "error_type": "concurrency_issues",
      "error_message": "DeadlockError: Thread deadlock detected",
      "stack_trace": "Traceback (most recent call last):\n  File \"main.py\", line 42, in <module>\n    result = process_data(input_data)\n  File \"processor.py\", line 15, in process_data\n    return transform(validate(data))\n  File \"validator.py\", line 8, in validate\n    raise ValueError(\"Invalid data\")\nValueError: Invalid data",
      "timestamp": "2025-08-07T02:22:51.020525"
    }
  ],
  "symptoms": [
    "Intermittent failures",
    "Race condition symptoms",
    "Deadlock occurs"
  ],
  "error_location": {
    "file": "main.py",
    "line": 143,
    "function": "process_function",
    "module": "services"
  },
  "evaluation_criteria": {
    "must_find_files": [
      "helpers/file_3.py",
      "services/file_7.py",
      "utils/file_11.py"
    ],
    "should_find_files": [
      "controllers/file_4.py",
      "models/file_8.py"
    ],
    "retrieval_threshold": 0.75,
    "fix_validation": "must_pass_tests"
  }
}