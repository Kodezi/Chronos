{
  "bug_id": "MRR-CROSS_CATEGORY-202508-0240",
  "category": "cross_category",
  "subcategory": "mixed_bugs",
  "language": "python",
  "description": "Complex bug: mixed_bugs with multiple issues",
  "complexity": {
    "spatial_distribution": 28,
    "temporal_spread_months": 11,
    "abstraction_layers": 4,
    "obfuscation_level": "high",
    "cross_module_dependencies": 16,
    "artifact_types": 2
  },
  "code_snippets": {
    "buggy_code": "def buggy_function_mixed_bugs(data):\n    # Bug: mixed_bugs\n    result = []\n    for item in data:\n        # Buggy logic here\n        if item > 0:\n            result.append(item)\n    return result",
    "fixed_code": "def fixed_function_mixed_bugs(data):\n    # Fixed: mixed_bugs\n    result = []\n    for item in data:\n        # Fixed logic here\n        if item >= 0:\n            result.append(item)\n    return result"
  },
  "scattered_context": [
    {
      "file_path": "helpers/file_1.py",
      "content": "class CriticalComponent:\n    def process(self, data):\n        # Critical logic related to cross_category\n        if not self.validate(data):\n            raise ValueError(\"Invalid data\")\n        return self.transform(data)\n    \n    def validate(self, data):\n        # Validation logic\n        return data is not None",
      "relevance": "critical",
      "relationship": "extends",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        12,
        83,
        100,
        126,
        74
      ]
    },
    {
      "file_path": "controllers/file_2.py",
      "content": "def important_function(param):\n    # Important logic for cross_category\n    result = []\n    for item in param:\n        result.append(process_item(item))\n    return result",
      "relevance": "high",
      "relationship": "extends",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        95,
        104,
        142,
        196,
        131
      ]
    },
    {
      "file_path": "helpers/file_3.py",
      "content": "def important_function(param):\n    # Important logic for cross_category\n    result = []\n    for item in param:\n        result.append(process_item(item))\n    return result",
      "relevance": "high",
      "relationship": "calls",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        100
      ]
    },
    {
      "file_path": "utils/file_4.py",
      "content": "def important_function(param):\n    # Important logic for cross_category\n    result = []\n    for item in param:\n        result.append(process_item(item))\n    return result",
      "relevance": "high",
      "relationship": "tests",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        81,
        186
      ]
    },
    {
      "file_path": "utils/file_5.py",
      "content": "class CriticalComponent:\n    def process(self, data):\n        # Critical logic related to cross_category\n        if not self.validate(data):\n            raise ValueError(\"Invalid data\")\n        return self.transform(data)\n    \n    def validate(self, data):\n        # Validation logic\n        return data is not None",
      "relevance": "critical",
      "relationship": "calls",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        49,
        39
      ]
    },
    {
      "file_path": "controllers/file_6.py",
      "content": "# Helper code for cross_category\ndef helper(): pass",
      "relevance": "low",
      "relationship": "uses",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        19,
        93,
        58,
        103
      ]
    },
    {
      "file_path": "controllers/file_7.py",
      "content": "def important_function(param):\n    # Important logic for cross_category\n    result = []\n    for item in param:\n        result.append(process_item(item))\n    return result",
      "relevance": "high",
      "relationship": "implements",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        180,
        26,
        17
      ]
    },
    {
      "file_path": "helpers/file_8.py",
      "content": "# Helper code for cross_category\ndef helper(): pass",
      "relevance": "medium",
      "relationship": "calls",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        150,
        107
      ]
    },
    {
      "file_path": "models/file_9.py",
      "content": "def important_function(param):\n    # Important logic for cross_category\n    result = []\n    for item in param:\n        result.append(process_item(item))\n    return result",
      "relevance": "high",
      "relationship": "calls",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        181,
        40,
        107,
        136,
        130
      ]
    },
    {
      "file_path": "models/file_10.py",
      "content": "def important_function(param):\n    # Important logic for cross_category\n    result = []\n    for item in param:\n        result.append(process_item(item))\n    return result",
      "relevance": "high",
      "relationship": "tests",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        194,
        164
      ]
    },
    {
      "file_path": "core/file_11.py",
      "content": "class CriticalComponent:\n    def process(self, data):\n        # Critical logic related to cross_category\n        if not self.validate(data):\n            raise ValueError(\"Invalid data\")\n        return self.transform(data)\n    \n    def validate(self, data):\n        # Validation logic\n        return data is not None",
      "relevance": "critical",
      "relationship": "imports",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        43,
        102,
        55
      ]
    },
    {
      "file_path": "models/file_12.py",
      "content": "class CriticalComponent:\n    def process(self, data):\n        # Critical logic related to cross_category\n        if not self.validate(data):\n            raise ValueError(\"Invalid data\")\n        return self.transform(data)\n    \n    def validate(self, data):\n        # Validation logic\n        return data is not None",
      "relevance": "critical",
      "relationship": "tests",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        185,
        179,
        73,
        178
      ]
    },
    {
      "file_path": "core/file_13.py",
      "content": "# Helper code for cross_category\ndef helper(): pass",
      "relevance": "low",
      "relationship": "uses",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        135
      ]
    },
    {
      "file_path": "models/file_14.py",
      "content": "# Helper code for cross_category\ndef helper(): pass",
      "relevance": "low",
      "relationship": "calls",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        148
      ]
    },
    {
      "file_path": "helpers/file_15.py",
      "content": "# Helper code for cross_category\ndef helper(): pass",
      "relevance": "low",
      "relationship": "extends",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        198,
        147,
        164
      ]
    },
    {
      "file_path": "models/file_16.py",
      "content": "class CriticalComponent:\n    def process(self, data):\n        # Critical logic related to cross_category\n        if not self.validate(data):\n            raise ValueError(\"Invalid data\")\n        return self.transform(data)\n    \n    def validate(self, data):\n        # Validation logic\n        return data is not None",
      "relevance": "critical",
      "relationship": "calls",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        192,
        83
      ]
    },
    {
      "file_path": "core/file_17.py",
      "content": "# Helper code for cross_category\ndef helper(): pass",
      "relevance": "low",
      "relationship": "uses",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        156,
        145,
        124,
        28,
        46
      ]
    },
    {
      "file_path": "models/file_18.py",
      "content": "def important_function(param):\n    # Important logic for cross_category\n    result = []\n    for item in param:\n        result.append(process_item(item))\n    return result",
      "relevance": "high",
      "relationship": "extends",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        73,
        135,
        92,
        104,
        88
      ]
    },
    {
      "file_path": "services/file_19.py",
      "content": "# Helper code for cross_category\ndef helper(): pass",
      "relevance": "low",
      "relationship": "imports",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        168,
        29
      ]
    },
    {
      "file_path": "helpers/file_20.py",
      "content": "def important_function(param):\n    # Important logic for cross_category\n    result = []\n    for item in param:\n        result.append(process_item(item))\n    return result",
      "relevance": "high",
      "relationship": "uses",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        29,
        27
      ]
    },
    {
      "file_path": "helpers/file_21.py",
      "content": "def important_function(param):\n    # Important logic for cross_category\n    result = []\n    for item in param:\n        result.append(process_item(item))\n    return result",
      "relevance": "high",
      "relationship": "implements",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        92
      ]
    },
    {
      "file_path": "helpers/file_22.py",
      "content": "class CriticalComponent:\n    def process(self, data):\n        # Critical logic related to cross_category\n        if not self.validate(data):\n            raise ValueError(\"Invalid data\")\n        return self.transform(data)\n    \n    def validate(self, data):\n        # Validation logic\n        return data is not None",
      "relevance": "critical",
      "relationship": "implements",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        103,
        26
      ]
    },
    {
      "file_path": "models/file_23.py",
      "content": "# Helper code for cross_category\ndef helper(): pass",
      "relevance": "medium",
      "relationship": "extends",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        36,
        82,
        179,
        79
      ]
    },
    {
      "file_path": "helpers/file_24.py",
      "content": "class CriticalComponent:\n    def process(self, data):\n        # Critical logic related to cross_category\n        if not self.validate(data):\n            raise ValueError(\"Invalid data\")\n        return self.transform(data)\n    \n    def validate(self, data):\n        # Validation logic\n        return data is not None",
      "relevance": "critical",
      "relationship": "uses",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        192,
        122,
        23,
        34
      ]
    },
    {
      "file_path": "services/file_25.py",
      "content": "class CriticalComponent:\n    def process(self, data):\n        # Critical logic related to cross_category\n        if not self.validate(data):\n            raise ValueError(\"Invalid data\")\n        return self.transform(data)\n    \n    def validate(self, data):\n        # Validation logic\n        return data is not None",
      "relevance": "critical",
      "relationship": "imports",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        163
      ]
    },
    {
      "file_path": "models/file_26.py",
      "content": "# Helper code for cross_category\ndef helper(): pass",
      "relevance": "low",
      "relationship": "implements",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        177,
        102
      ]
    },
    {
      "file_path": "controllers/file_27.py",
      "content": "# Helper code for cross_category\ndef helper(): pass",
      "relevance": "medium",
      "relationship": "uses",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        148,
        158
      ]
    },
    {
      "file_path": "controllers/file_28.py",
      "content": "# Helper code for cross_category\ndef helper(): pass",
      "relevance": "low",
      "relationship": "calls",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        161,
        15
      ]
    }
  ],
  "temporal_info": {
    "bug_introduced": "2024-09-11",
    "temporal_spread_days": 330,
    "refactoring_events": 1,
    "related_commits": [
      {
        "hash": "5fd67fb9",
        "date": "2025-05-03",
        "message": "Refactored module 0",
        "files": [
          "file_0.py"
        ]
      },
      {
        "hash": "94d3bf18",
        "date": "2024-12-19",
        "message": "Refactored module 1",
        "files": [
          "file_0.py",
          "file_1.py",
          "file_2.py",
          "file_3.py"
        ]
      },
      {
        "hash": "b9169d7a",
        "date": "2025-06-04",
        "message": "Refactored module 2",
        "files": [
          "file_0.py",
          "file_1.py",
          "file_2.py",
          "file_3.py"
        ]
      }
    ]
  },
  "retrieval_paths": {
    "explicit": [
      {
        "from": "helpers/file_1.py",
        "to": "controllers/file_2.py",
        "type": "extends"
      },
      {
        "from": "controllers/file_2.py",
        "to": "helpers/file_3.py",
        "type": "extends"
      },
      {
        "from": "helpers/file_3.py",
        "to": "utils/file_4.py",
        "type": "calls"
      },
      {
        "from": "utils/file_4.py",
        "to": "utils/file_5.py",
        "type": "imports"
      },
      {
        "from": "utils/file_5.py",
        "to": "controllers/file_6.py",
        "type": "extends"
      }
    ],
    "implicit": [
      {
        "files": [
          "helpers/file_3.py",
          "models/file_26.py",
          "helpers/file_1.py"
        ],
        "pattern": "shared_dependency"
      },
      {
        "files": [
          "core/file_17.py",
          "models/file_18.py",
          "core/file_13.py"
        ],
        "pattern": "shared_dependency"
      },
      {
        "files": [
          "models/file_12.py",
          "helpers/file_21.py",
          "services/file_25.py"
        ],
        "pattern": "shared_dependency"
      }
    ],
    "compositional": [
      {
        "path": [
          "models/file_23.py",
          "models/file_9.py"
        ],
        "depth": 1
      },
      {
        "path": [
          "models/file_14.py",
          "core/file_17.py",
          "models/file_16.py"
        ],
        "depth": 2
      },
      {
        "path": [
          "models/file_12.py",
          "services/file_19.py",
          "controllers/file_27.py",
          "models/file_10.py"
        ],
        "depth": 3
      },
      {
        "path": [
          "helpers/file_8.py",
          "helpers/file_15.py",
          "services/file_19.py",
          "models/file_18.py",
          "helpers/file_24.py"
        ],
        "depth": 4
      }
    ]
  },
  "obfuscation": {
    "obfuscation_level": "high",
    "renamed_entities": {
      "entity_0": "JMAHshItew",
      "entity_1": "AuksTnjjsL",
      "entity_2": "WgaeYMxHeO",
      "entity_3": "ATjoavAHCm",
      "entity_4": "WiJGLvfduw",
      "entity_5": "GbuyFczMOC",
      "entity_6": "VdBBPUIyxH",
      "entity_7": "WcOJkeABRD",
      "entity_8": "xtkZgHQLwE",
      "entity_9": "aOkiLYFJQt",
      "entity_10": "MDtTzqcfwO",
      "entity_11": "BvFxGDdgXe",
      "entity_12": "kzQZbmwDYG",
      "entity_13": "mpHbEmLQbr"
    },
    "moved_files": 2,
    "refactored_modules": 1
  },
  "ground_truth": {
    "root_cause": "mixed_bugs in main processing logic",
    "fix_type": "multiple_fixes",
    "must_find_files": [
      "helpers/file_1.py",
      "controllers/file_2.py",
      "helpers/file_3.py",
      "utils/file_4.py",
      "utils/file_5.py"
    ],
    "should_find_files": [
      "helpers/file_8.py",
      "models/file_23.py",
      "controllers/file_27.py"
    ],
    "expected_behavior": {
      "should_not_error": true,
      "expected_output": "Correct processing result",
      "performance_threshold": 0.7036607835849822
    }
  },
  "test_artifacts": [
    {
      "file_name": "test_cross_category_1.python",
      "test_code": "import unittest\n\nclass TestCross_Category(unittest.TestCase):\n    def test_scenario_1(self):\n        # Test for cross_category\n        result = function_under_test(test_data)\n        self.assertEqual(result, expected_result)\n",
      "test_type": "e2e"
    },
    {
      "file_name": "test_cross_category_2.python",
      "test_code": "import unittest\n\nclass TestCross_Category(unittest.TestCase):\n    def test_scenario_2(self):\n        # Test for cross_category\n        result = function_under_test(test_data)\n        self.assertEqual(result, expected_result)\n",
      "test_type": "unit"
    }
  ],
  "error_artifacts": [
    {
      "error_type": "cross_category",
      "error_message": "SystemError: Multiple failures detected",
      "stack_trace": "Traceback (most recent call last):\n  File \"main.py\", line 42, in <module>\n    result = process_data(input_data)\n  File \"processor.py\", line 15, in process_data\n    return transform(validate(data))\n  File \"validator.py\", line 8, in validate\n    raise ValueError(\"Invalid data\")\nValueError: Invalid data",
      "timestamp": "2025-08-07T02:22:51.737193"
    },
    {
      "error_type": "cross_category",
      "error_message": "SystemError: Multiple failures detected",
      "stack_trace": "Traceback (most recent call last):\n  File \"main.py\", line 42, in <module>\n    result = process_data(input_data)\n  File \"processor.py\", line 15, in process_data\n    return transform(validate(data))\n  File \"validator.py\", line 8, in validate\n    raise ValueError(\"Invalid data\")\nValueError: Invalid data",
      "timestamp": "2025-08-07T02:22:51.737194"
    }
  ],
  "symptoms": [
    "Generic symptom"
  ],
  "error_location": {
    "file": "main.py",
    "line": 135,
    "function": "process_function",
    "module": "core"
  },
  "evaluation_criteria": {
    "must_find_files": [
      "helpers/file_1.py",
      "utils/file_5.py",
      "core/file_11.py"
    ],
    "should_find_files": [
      "controllers/file_2.py",
      "helpers/file_3.py"
    ],
    "retrieval_threshold": 0.75,
    "fix_validation": "must_pass_tests"
  }
}