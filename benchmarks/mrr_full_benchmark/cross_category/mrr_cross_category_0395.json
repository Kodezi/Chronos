{
  "bug_id": "MRR-CROSS_CATEGORY-202508-0395",
  "category": "cross_category",
  "subcategory": "integration_issues",
  "language": "python",
  "description": "Complex bug: integration_issues with multiple issues",
  "complexity": {
    "spatial_distribution": 41,
    "temporal_spread_months": 6,
    "abstraction_layers": 4,
    "obfuscation_level": "high",
    "cross_module_dependencies": 14,
    "artifact_types": 5
  },
  "code_snippets": {
    "buggy_code": "def buggy_function_integration_issues(data):\n    # Bug: integration_issues\n    result = []\n    for item in data:\n        # Buggy logic here\n        if item > 0:\n            result.append(item)\n    return result",
    "fixed_code": "def fixed_function_integration_issues(data):\n    # Fixed: integration_issues\n    result = []\n    for item in data:\n        # Fixed logic here\n        if item >= 0:\n            result.append(item)\n    return result"
  },
  "scattered_context": [
    {
      "file_path": "utils/file_1.py",
      "content": "# Helper code for cross_category\ndef helper(): pass",
      "relevance": "low",
      "relationship": "implements",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        96,
        126,
        157
      ]
    },
    {
      "file_path": "core/file_2.py",
      "content": "class CriticalComponent:\n    def process(self, data):\n        # Critical logic related to cross_category\n        if not self.validate(data):\n            raise ValueError(\"Invalid data\")\n        return self.transform(data)\n    \n    def validate(self, data):\n        # Validation logic\n        return data is not None",
      "relevance": "critical",
      "relationship": "implements",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        26
      ]
    },
    {
      "file_path": "controllers/file_3.py",
      "content": "# Helper code for cross_category\ndef helper(): pass",
      "relevance": "medium",
      "relationship": "imports",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        54,
        35
      ]
    },
    {
      "file_path": "services/file_4.py",
      "content": "class CriticalComponent:\n    def process(self, data):\n        # Critical logic related to cross_category\n        if not self.validate(data):\n            raise ValueError(\"Invalid data\")\n        return self.transform(data)\n    \n    def validate(self, data):\n        # Validation logic\n        return data is not None",
      "relevance": "critical",
      "relationship": "uses",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        13,
        12
      ]
    },
    {
      "file_path": "models/file_5.py",
      "content": "# Helper code for cross_category\ndef helper(): pass",
      "relevance": "medium",
      "relationship": "calls",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        15,
        171
      ]
    },
    {
      "file_path": "controllers/file_6.py",
      "content": "class CriticalComponent:\n    def process(self, data):\n        # Critical logic related to cross_category\n        if not self.validate(data):\n            raise ValueError(\"Invalid data\")\n        return self.transform(data)\n    \n    def validate(self, data):\n        # Validation logic\n        return data is not None",
      "relevance": "critical",
      "relationship": "imports",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        129,
        151,
        111,
        66,
        164
      ]
    },
    {
      "file_path": "controllers/file_7.py",
      "content": "# Helper code for cross_category\ndef helper(): pass",
      "relevance": "medium",
      "relationship": "tests",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        41,
        69,
        159,
        55
      ]
    },
    {
      "file_path": "core/file_8.py",
      "content": "class CriticalComponent:\n    def process(self, data):\n        # Critical logic related to cross_category\n        if not self.validate(data):\n            raise ValueError(\"Invalid data\")\n        return self.transform(data)\n    \n    def validate(self, data):\n        # Validation logic\n        return data is not None",
      "relevance": "critical",
      "relationship": "extends",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        133
      ]
    },
    {
      "file_path": "models/file_9.py",
      "content": "class CriticalComponent:\n    def process(self, data):\n        # Critical logic related to cross_category\n        if not self.validate(data):\n            raise ValueError(\"Invalid data\")\n        return self.transform(data)\n    \n    def validate(self, data):\n        # Validation logic\n        return data is not None",
      "relevance": "critical",
      "relationship": "tests",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        142,
        80,
        92,
        134,
        66
      ]
    },
    {
      "file_path": "core/file_10.py",
      "content": "def important_function(param):\n    # Important logic for cross_category\n    result = []\n    for item in param:\n        result.append(process_item(item))\n    return result",
      "relevance": "high",
      "relationship": "tests",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        61
      ]
    },
    {
      "file_path": "controllers/file_11.py",
      "content": "# Helper code for cross_category\ndef helper(): pass",
      "relevance": "low",
      "relationship": "uses",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        36,
        79,
        62
      ]
    },
    {
      "file_path": "controllers/file_12.py",
      "content": "def important_function(param):\n    # Important logic for cross_category\n    result = []\n    for item in param:\n        result.append(process_item(item))\n    return result",
      "relevance": "high",
      "relationship": "extends",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        192,
        90,
        100,
        27
      ]
    },
    {
      "file_path": "controllers/file_13.py",
      "content": "# Helper code for cross_category\ndef helper(): pass",
      "relevance": "medium",
      "relationship": "calls",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        50,
        23,
        78
      ]
    },
    {
      "file_path": "helpers/file_14.py",
      "content": "# Helper code for cross_category\ndef helper(): pass",
      "relevance": "medium",
      "relationship": "imports",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        59,
        161,
        77,
        169
      ]
    },
    {
      "file_path": "controllers/file_15.py",
      "content": "# Helper code for cross_category\ndef helper(): pass",
      "relevance": "medium",
      "relationship": "tests",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        69,
        29
      ]
    },
    {
      "file_path": "core/file_16.py",
      "content": "class CriticalComponent:\n    def process(self, data):\n        # Critical logic related to cross_category\n        if not self.validate(data):\n            raise ValueError(\"Invalid data\")\n        return self.transform(data)\n    \n    def validate(self, data):\n        # Validation logic\n        return data is not None",
      "relevance": "critical",
      "relationship": "tests",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        113,
        94,
        144
      ]
    },
    {
      "file_path": "controllers/file_17.py",
      "content": "def important_function(param):\n    # Important logic for cross_category\n    result = []\n    for item in param:\n        result.append(process_item(item))\n    return result",
      "relevance": "high",
      "relationship": "imports",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        198,
        110,
        15
      ]
    },
    {
      "file_path": "services/file_18.py",
      "content": "class CriticalComponent:\n    def process(self, data):\n        # Critical logic related to cross_category\n        if not self.validate(data):\n            raise ValueError(\"Invalid data\")\n        return self.transform(data)\n    \n    def validate(self, data):\n        # Validation logic\n        return data is not None",
      "relevance": "critical",
      "relationship": "calls",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        83,
        12
      ]
    },
    {
      "file_path": "utils/file_19.py",
      "content": "class CriticalComponent:\n    def process(self, data):\n        # Critical logic related to cross_category\n        if not self.validate(data):\n            raise ValueError(\"Invalid data\")\n        return self.transform(data)\n    \n    def validate(self, data):\n        # Validation logic\n        return data is not None",
      "relevance": "critical",
      "relationship": "tests",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        114,
        70
      ]
    },
    {
      "file_path": "helpers/file_20.py",
      "content": "def important_function(param):\n    # Important logic for cross_category\n    result = []\n    for item in param:\n        result.append(process_item(item))\n    return result",
      "relevance": "high",
      "relationship": "extends",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        28,
        87,
        47,
        14,
        176
      ]
    },
    {
      "file_path": "utils/file_21.py",
      "content": "# Helper code for cross_category\ndef helper(): pass",
      "relevance": "low",
      "relationship": "imports",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        15,
        14,
        48
      ]
    },
    {
      "file_path": "services/file_22.py",
      "content": "class CriticalComponent:\n    def process(self, data):\n        # Critical logic related to cross_category\n        if not self.validate(data):\n            raise ValueError(\"Invalid data\")\n        return self.transform(data)\n    \n    def validate(self, data):\n        # Validation logic\n        return data is not None",
      "relevance": "critical",
      "relationship": "calls",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        129,
        95,
        48,
        182
      ]
    },
    {
      "file_path": "utils/file_23.py",
      "content": "def important_function(param):\n    # Important logic for cross_category\n    result = []\n    for item in param:\n        result.append(process_item(item))\n    return result",
      "relevance": "high",
      "relationship": "extends",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        21,
        72,
        114,
        195
      ]
    },
    {
      "file_path": "utils/file_24.py",
      "content": "# Helper code for cross_category\ndef helper(): pass",
      "relevance": "low",
      "relationship": "extends",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        124,
        175
      ]
    },
    {
      "file_path": "helpers/file_25.py",
      "content": "class CriticalComponent:\n    def process(self, data):\n        # Critical logic related to cross_category\n        if not self.validate(data):\n            raise ValueError(\"Invalid data\")\n        return self.transform(data)\n    \n    def validate(self, data):\n        # Validation logic\n        return data is not None",
      "relevance": "critical",
      "relationship": "implements",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        152,
        37,
        51,
        134
      ]
    },
    {
      "file_path": "helpers/file_26.py",
      "content": "class CriticalComponent:\n    def process(self, data):\n        # Critical logic related to cross_category\n        if not self.validate(data):\n            raise ValueError(\"Invalid data\")\n        return self.transform(data)\n    \n    def validate(self, data):\n        # Validation logic\n        return data is not None",
      "relevance": "critical",
      "relationship": "implements",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        46,
        24,
        115
      ]
    },
    {
      "file_path": "controllers/file_27.py",
      "content": "# Helper code for cross_category\ndef helper(): pass",
      "relevance": "low",
      "relationship": "implements",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        45,
        197
      ]
    },
    {
      "file_path": "utils/file_28.py",
      "content": "# Helper code for cross_category\ndef helper(): pass",
      "relevance": "low",
      "relationship": "tests",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        43,
        61,
        90,
        122,
        185
      ]
    },
    {
      "file_path": "controllers/file_29.py",
      "content": "class CriticalComponent:\n    def process(self, data):\n        # Critical logic related to cross_category\n        if not self.validate(data):\n            raise ValueError(\"Invalid data\")\n        return self.transform(data)\n    \n    def validate(self, data):\n        # Validation logic\n        return data is not None",
      "relevance": "critical",
      "relationship": "extends",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        95,
        59,
        153,
        104,
        139
      ]
    },
    {
      "file_path": "services/file_30.py",
      "content": "# Helper code for cross_category\ndef helper(): pass",
      "relevance": "low",
      "relationship": "extends",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        149,
        109,
        40,
        132,
        114
      ]
    },
    {
      "file_path": "controllers/file_31.py",
      "content": "def important_function(param):\n    # Important logic for cross_category\n    result = []\n    for item in param:\n        result.append(process_item(item))\n    return result",
      "relevance": "high",
      "relationship": "extends",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        95,
        71,
        22,
        182
      ]
    },
    {
      "file_path": "utils/file_32.py",
      "content": "# Helper code for cross_category\ndef helper(): pass",
      "relevance": "low",
      "relationship": "uses",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        130,
        121,
        101,
        176
      ]
    },
    {
      "file_path": "core/file_33.py",
      "content": "# Helper code for cross_category\ndef helper(): pass",
      "relevance": "medium",
      "relationship": "tests",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        96
      ]
    },
    {
      "file_path": "utils/file_34.py",
      "content": "# Helper code for cross_category\ndef helper(): pass",
      "relevance": "low",
      "relationship": "implements",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        121,
        40
      ]
    },
    {
      "file_path": "models/file_35.py",
      "content": "# Helper code for cross_category\ndef helper(): pass",
      "relevance": "medium",
      "relationship": "calls",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        122,
        112,
        24,
        50
      ]
    },
    {
      "file_path": "utils/file_36.py",
      "content": "# Helper code for cross_category\ndef helper(): pass",
      "relevance": "low",
      "relationship": "calls",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        187,
        29
      ]
    },
    {
      "file_path": "controllers/file_37.py",
      "content": "# Helper code for cross_category\ndef helper(): pass",
      "relevance": "low",
      "relationship": "tests",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        110
      ]
    },
    {
      "file_path": "helpers/file_38.py",
      "content": "# Helper code for cross_category\ndef helper(): pass",
      "relevance": "medium",
      "relationship": "extends",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        17,
        131,
        71
      ]
    },
    {
      "file_path": "utils/file_39.py",
      "content": "# Helper code for cross_category\ndef helper(): pass",
      "relevance": "medium",
      "relationship": "calls",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        153,
        89,
        146
      ]
    },
    {
      "file_path": "utils/file_40.py",
      "content": "def important_function(param):\n    # Important logic for cross_category\n    result = []\n    for item in param:\n        result.append(process_item(item))\n    return result",
      "relevance": "high",
      "relationship": "tests",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        144,
        105
      ]
    },
    {
      "file_path": "services/file_41.py",
      "content": "class CriticalComponent:\n    def process(self, data):\n        # Critical logic related to cross_category\n        if not self.validate(data):\n            raise ValueError(\"Invalid data\")\n        return self.transform(data)\n    \n    def validate(self, data):\n        # Validation logic\n        return data is not None",
      "relevance": "critical",
      "relationship": "calls",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        11,
        106
      ]
    }
  ],
  "temporal_info": {
    "bug_introduced": "2025-02-08",
    "temporal_spread_days": 180,
    "refactoring_events": 2,
    "related_commits": [
      {
        "hash": "5fd67fb9",
        "date": "2025-02-09",
        "message": "Refactored module 0",
        "files": [
          "file_0.py"
        ]
      },
      {
        "hash": "94d3bf18",
        "date": "2025-04-04",
        "message": "Refactored module 1",
        "files": [
          "file_0.py"
        ]
      },
      {
        "hash": "b9169d7a",
        "date": "2025-03-10",
        "message": "Refactored module 2",
        "files": [
          "file_0.py",
          "file_1.py"
        ]
      }
    ]
  },
  "retrieval_paths": {
    "explicit": [
      {
        "from": "utils/file_1.py",
        "to": "core/file_2.py",
        "type": "calls"
      },
      {
        "from": "core/file_2.py",
        "to": "controllers/file_3.py",
        "type": "extends"
      },
      {
        "from": "controllers/file_3.py",
        "to": "services/file_4.py",
        "type": "calls"
      },
      {
        "from": "services/file_4.py",
        "to": "models/file_5.py",
        "type": "imports"
      },
      {
        "from": "models/file_5.py",
        "to": "controllers/file_6.py",
        "type": "extends"
      }
    ],
    "implicit": [
      {
        "files": [
          "core/file_33.py",
          "controllers/file_11.py",
          "controllers/file_27.py"
        ],
        "pattern": "shared_dependency"
      },
      {
        "files": [
          "utils/file_23.py",
          "models/file_35.py",
          "controllers/file_3.py"
        ],
        "pattern": "shared_dependency"
      },
      {
        "files": [
          "controllers/file_3.py",
          "models/file_35.py",
          "core/file_2.py"
        ],
        "pattern": "shared_dependency"
      }
    ],
    "compositional": [
      {
        "path": [
          "core/file_2.py",
          "utils/file_28.py"
        ],
        "depth": 1
      },
      {
        "path": [
          "controllers/file_31.py",
          "utils/file_34.py",
          "models/file_5.py"
        ],
        "depth": 2
      },
      {
        "path": [
          "controllers/file_37.py",
          "utils/file_36.py",
          "models/file_9.py",
          "controllers/file_6.py"
        ],
        "depth": 3
      },
      {
        "path": [
          "core/file_2.py",
          "controllers/file_11.py",
          "core/file_16.py",
          "controllers/file_13.py",
          "services/file_41.py"
        ],
        "depth": 4
      }
    ]
  },
  "obfuscation": {
    "obfuscation_level": "high",
    "renamed_entities": {
      "entity_0": "lgExJoMoLM",
      "entity_1": "UXZyquBTXw",
      "entity_2": "ViXTokPEbx",
      "entity_3": "COTkFWjFsz",
      "entity_4": "NivyrLTTDb"
    },
    "moved_files": 5,
    "refactored_modules": 0
  },
  "ground_truth": {
    "root_cause": "integration_issues in main processing logic",
    "fix_type": "multiple_fixes",
    "must_find_files": [
      "core/file_2.py",
      "services/file_4.py",
      "controllers/file_6.py",
      "core/file_8.py",
      "models/file_9.py"
    ],
    "should_find_files": [
      "controllers/file_3.py",
      "models/file_5.py",
      "controllers/file_7.py"
    ],
    "expected_behavior": {
      "should_not_error": true,
      "expected_output": "Correct processing result",
      "performance_threshold": 0.7437859118346932
    }
  },
  "test_artifacts": [
    {
      "file_name": "test_cross_category_1.python",
      "test_code": "import unittest\n\nclass TestCross_Category(unittest.TestCase):\n    def test_scenario_1(self):\n        # Test for cross_category\n        result = function_under_test(test_data)\n        self.assertEqual(result, expected_result)\n",
      "test_type": "e2e"
    }
  ],
  "error_artifacts": [
    {
      "error_type": "cross_category",
      "error_message": "SystemError: Multiple failures detected",
      "stack_trace": "Traceback (most recent call last):\n  File \"main.py\", line 42, in <module>\n    result = process_data(input_data)\n  File \"processor.py\", line 15, in process_data\n    return transform(validate(data))\n  File \"validator.py\", line 8, in validate\n    raise ValueError(\"Invalid data\")\nValueError: Invalid data",
      "timestamp": "2025-08-07T02:22:51.842571"
    }
  ],
  "symptoms": [
    "Generic symptom"
  ],
  "error_location": {
    "file": "main.py",
    "line": 146,
    "function": "process_function",
    "module": "services"
  },
  "evaluation_criteria": {
    "must_find_files": [
      "core/file_2.py",
      "services/file_4.py",
      "controllers/file_6.py"
    ],
    "should_find_files": [
      "core/file_10.py",
      "controllers/file_12.py"
    ],
    "retrieval_threshold": 0.75,
    "fix_validation": "must_pass_tests"
  }
}