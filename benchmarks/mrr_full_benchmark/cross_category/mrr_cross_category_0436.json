{
  "bug_id": "MRR-CROSS_CATEGORY-202508-0436",
  "category": "cross_category",
  "subcategory": "complex_interaction",
  "language": "python",
  "description": "Complex bug: complex_interaction with multiple issues",
  "complexity": {
    "spatial_distribution": 45,
    "temporal_spread_months": 11,
    "abstraction_layers": 5,
    "obfuscation_level": "high",
    "cross_module_dependencies": 14,
    "artifact_types": 2
  },
  "code_snippets": {
    "buggy_code": "def buggy_function_complex_interaction(data):\n    # Bug: complex_interaction\n    result = []\n    for item in data:\n        # Buggy logic here\n        if item > 0:\n            result.append(item)\n    return result",
    "fixed_code": "def fixed_function_complex_interaction(data):\n    # Fixed: complex_interaction\n    result = []\n    for item in data:\n        # Fixed logic here\n        if item >= 0:\n            result.append(item)\n    return result"
  },
  "scattered_context": [
    {
      "file_path": "models/file_1.py",
      "content": "# Helper code for cross_category\ndef helper(): pass",
      "relevance": "low",
      "relationship": "tests",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        37,
        115,
        35,
        103
      ]
    },
    {
      "file_path": "services/file_2.py",
      "content": "class CriticalComponent:\n    def process(self, data):\n        # Critical logic related to cross_category\n        if not self.validate(data):\n            raise ValueError(\"Invalid data\")\n        return self.transform(data)\n    \n    def validate(self, data):\n        # Validation logic\n        return data is not None",
      "relevance": "critical",
      "relationship": "uses",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        102,
        73,
        67,
        177,
        55
      ]
    },
    {
      "file_path": "utils/file_3.py",
      "content": "class CriticalComponent:\n    def process(self, data):\n        # Critical logic related to cross_category\n        if not self.validate(data):\n            raise ValueError(\"Invalid data\")\n        return self.transform(data)\n    \n    def validate(self, data):\n        # Validation logic\n        return data is not None",
      "relevance": "critical",
      "relationship": "extends",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        42,
        139,
        95,
        19
      ]
    },
    {
      "file_path": "services/file_4.py",
      "content": "def important_function(param):\n    # Important logic for cross_category\n    result = []\n    for item in param:\n        result.append(process_item(item))\n    return result",
      "relevance": "high",
      "relationship": "uses",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        145,
        122,
        151,
        98
      ]
    },
    {
      "file_path": "controllers/file_5.py",
      "content": "# Helper code for cross_category\ndef helper(): pass",
      "relevance": "medium",
      "relationship": "tests",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        159
      ]
    },
    {
      "file_path": "core/file_6.py",
      "content": "def important_function(param):\n    # Important logic for cross_category\n    result = []\n    for item in param:\n        result.append(process_item(item))\n    return result",
      "relevance": "high",
      "relationship": "tests",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        177
      ]
    },
    {
      "file_path": "services/file_7.py",
      "content": "def important_function(param):\n    # Important logic for cross_category\n    result = []\n    for item in param:\n        result.append(process_item(item))\n    return result",
      "relevance": "high",
      "relationship": "calls",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        94,
        84,
        197
      ]
    },
    {
      "file_path": "services/file_8.py",
      "content": "# Helper code for cross_category\ndef helper(): pass",
      "relevance": "medium",
      "relationship": "calls",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        136,
        94,
        188,
        160
      ]
    },
    {
      "file_path": "models/file_9.py",
      "content": "# Helper code for cross_category\ndef helper(): pass",
      "relevance": "low",
      "relationship": "uses",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        120,
        43,
        171,
        67,
        100
      ]
    },
    {
      "file_path": "models/file_10.py",
      "content": "def important_function(param):\n    # Important logic for cross_category\n    result = []\n    for item in param:\n        result.append(process_item(item))\n    return result",
      "relevance": "high",
      "relationship": "uses",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        139,
        172,
        149,
        23,
        101
      ]
    },
    {
      "file_path": "utils/file_11.py",
      "content": "def important_function(param):\n    # Important logic for cross_category\n    result = []\n    for item in param:\n        result.append(process_item(item))\n    return result",
      "relevance": "high",
      "relationship": "tests",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        200,
        194,
        71,
        155
      ]
    },
    {
      "file_path": "controllers/file_12.py",
      "content": "def important_function(param):\n    # Important logic for cross_category\n    result = []\n    for item in param:\n        result.append(process_item(item))\n    return result",
      "relevance": "high",
      "relationship": "calls",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        195,
        128,
        31,
        162
      ]
    },
    {
      "file_path": "core/file_13.py",
      "content": "# Helper code for cross_category\ndef helper(): pass",
      "relevance": "low",
      "relationship": "tests",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        36
      ]
    },
    {
      "file_path": "helpers/file_14.py",
      "content": "# Helper code for cross_category\ndef helper(): pass",
      "relevance": "medium",
      "relationship": "calls",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        23
      ]
    },
    {
      "file_path": "core/file_15.py",
      "content": "# Helper code for cross_category\ndef helper(): pass",
      "relevance": "low",
      "relationship": "implements",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        18
      ]
    },
    {
      "file_path": "core/file_16.py",
      "content": "class CriticalComponent:\n    def process(self, data):\n        # Critical logic related to cross_category\n        if not self.validate(data):\n            raise ValueError(\"Invalid data\")\n        return self.transform(data)\n    \n    def validate(self, data):\n        # Validation logic\n        return data is not None",
      "relevance": "critical",
      "relationship": "implements",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        31
      ]
    },
    {
      "file_path": "models/file_17.py",
      "content": "# Helper code for cross_category\ndef helper(): pass",
      "relevance": "low",
      "relationship": "uses",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        184,
        84,
        164,
        177
      ]
    },
    {
      "file_path": "models/file_18.py",
      "content": "# Helper code for cross_category\ndef helper(): pass",
      "relevance": "medium",
      "relationship": "extends",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        72,
        194,
        77,
        136,
        118
      ]
    },
    {
      "file_path": "controllers/file_19.py",
      "content": "class CriticalComponent:\n    def process(self, data):\n        # Critical logic related to cross_category\n        if not self.validate(data):\n            raise ValueError(\"Invalid data\")\n        return self.transform(data)\n    \n    def validate(self, data):\n        # Validation logic\n        return data is not None",
      "relevance": "critical",
      "relationship": "tests",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        117,
        180,
        44
      ]
    },
    {
      "file_path": "models/file_20.py",
      "content": "def important_function(param):\n    # Important logic for cross_category\n    result = []\n    for item in param:\n        result.append(process_item(item))\n    return result",
      "relevance": "high",
      "relationship": "implements",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        189,
        59,
        153,
        173
      ]
    },
    {
      "file_path": "models/file_21.py",
      "content": "class CriticalComponent:\n    def process(self, data):\n        # Critical logic related to cross_category\n        if not self.validate(data):\n            raise ValueError(\"Invalid data\")\n        return self.transform(data)\n    \n    def validate(self, data):\n        # Validation logic\n        return data is not None",
      "relevance": "critical",
      "relationship": "tests",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        164,
        194,
        19,
        21
      ]
    },
    {
      "file_path": "models/file_22.py",
      "content": "class CriticalComponent:\n    def process(self, data):\n        # Critical logic related to cross_category\n        if not self.validate(data):\n            raise ValueError(\"Invalid data\")\n        return self.transform(data)\n    \n    def validate(self, data):\n        # Validation logic\n        return data is not None",
      "relevance": "critical",
      "relationship": "tests",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        195,
        155
      ]
    },
    {
      "file_path": "services/file_23.py",
      "content": "def important_function(param):\n    # Important logic for cross_category\n    result = []\n    for item in param:\n        result.append(process_item(item))\n    return result",
      "relevance": "high",
      "relationship": "implements",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        109
      ]
    },
    {
      "file_path": "services/file_24.py",
      "content": "def important_function(param):\n    # Important logic for cross_category\n    result = []\n    for item in param:\n        result.append(process_item(item))\n    return result",
      "relevance": "high",
      "relationship": "implements",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        41,
        123,
        200,
        78,
        51
      ]
    },
    {
      "file_path": "core/file_25.py",
      "content": "class CriticalComponent:\n    def process(self, data):\n        # Critical logic related to cross_category\n        if not self.validate(data):\n            raise ValueError(\"Invalid data\")\n        return self.transform(data)\n    \n    def validate(self, data):\n        # Validation logic\n        return data is not None",
      "relevance": "critical",
      "relationship": "uses",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        88,
        65,
        159
      ]
    },
    {
      "file_path": "helpers/file_26.py",
      "content": "# Helper code for cross_category\ndef helper(): pass",
      "relevance": "low",
      "relationship": "implements",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        21,
        92,
        179,
        145
      ]
    },
    {
      "file_path": "controllers/file_27.py",
      "content": "class CriticalComponent:\n    def process(self, data):\n        # Critical logic related to cross_category\n        if not self.validate(data):\n            raise ValueError(\"Invalid data\")\n        return self.transform(data)\n    \n    def validate(self, data):\n        # Validation logic\n        return data is not None",
      "relevance": "critical",
      "relationship": "implements",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        36,
        30,
        161
      ]
    },
    {
      "file_path": "services/file_28.py",
      "content": "# Helper code for cross_category\ndef helper(): pass",
      "relevance": "low",
      "relationship": "extends",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        120,
        169
      ]
    },
    {
      "file_path": "utils/file_29.py",
      "content": "# Helper code for cross_category\ndef helper(): pass",
      "relevance": "medium",
      "relationship": "implements",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        86,
        53,
        82
      ]
    },
    {
      "file_path": "models/file_30.py",
      "content": "def important_function(param):\n    # Important logic for cross_category\n    result = []\n    for item in param:\n        result.append(process_item(item))\n    return result",
      "relevance": "high",
      "relationship": "implements",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        102,
        35
      ]
    },
    {
      "file_path": "core/file_31.py",
      "content": "# Helper code for cross_category\ndef helper(): pass",
      "relevance": "medium",
      "relationship": "implements",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        14
      ]
    },
    {
      "file_path": "helpers/file_32.py",
      "content": "class CriticalComponent:\n    def process(self, data):\n        # Critical logic related to cross_category\n        if not self.validate(data):\n            raise ValueError(\"Invalid data\")\n        return self.transform(data)\n    \n    def validate(self, data):\n        # Validation logic\n        return data is not None",
      "relevance": "critical",
      "relationship": "extends",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        57
      ]
    },
    {
      "file_path": "utils/file_33.py",
      "content": "# Helper code for cross_category\ndef helper(): pass",
      "relevance": "low",
      "relationship": "implements",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        51,
        59,
        148,
        186
      ]
    },
    {
      "file_path": "models/file_34.py",
      "content": "# Helper code for cross_category\ndef helper(): pass",
      "relevance": "low",
      "relationship": "uses",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        51,
        159,
        139,
        168,
        136
      ]
    },
    {
      "file_path": "services/file_35.py",
      "content": "# Helper code for cross_category\ndef helper(): pass",
      "relevance": "medium",
      "relationship": "tests",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        171,
        125,
        186,
        194
      ]
    },
    {
      "file_path": "controllers/file_36.py",
      "content": "# Helper code for cross_category\ndef helper(): pass",
      "relevance": "medium",
      "relationship": "tests",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        151
      ]
    },
    {
      "file_path": "core/file_37.py",
      "content": "# Helper code for cross_category\ndef helper(): pass",
      "relevance": "medium",
      "relationship": "implements",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        38,
        162,
        42,
        95
      ]
    },
    {
      "file_path": "services/file_38.py",
      "content": "# Helper code for cross_category\ndef helper(): pass",
      "relevance": "medium",
      "relationship": "extends",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        44,
        141,
        27,
        193,
        15
      ]
    },
    {
      "file_path": "controllers/file_39.py",
      "content": "# Helper code for cross_category\ndef helper(): pass",
      "relevance": "medium",
      "relationship": "calls",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        87,
        161
      ]
    },
    {
      "file_path": "models/file_40.py",
      "content": "class CriticalComponent:\n    def process(self, data):\n        # Critical logic related to cross_category\n        if not self.validate(data):\n            raise ValueError(\"Invalid data\")\n        return self.transform(data)\n    \n    def validate(self, data):\n        # Validation logic\n        return data is not None",
      "relevance": "critical",
      "relationship": "uses",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        181,
        42,
        110,
        47
      ]
    },
    {
      "file_path": "controllers/file_41.py",
      "content": "# Helper code for cross_category\ndef helper(): pass",
      "relevance": "low",
      "relationship": "imports",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        92,
        193
      ]
    },
    {
      "file_path": "services/file_42.py",
      "content": "# Helper code for cross_category\ndef helper(): pass",
      "relevance": "medium",
      "relationship": "extends",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        184,
        163,
        66,
        96,
        154
      ]
    },
    {
      "file_path": "services/file_43.py",
      "content": "class CriticalComponent:\n    def process(self, data):\n        # Critical logic related to cross_category\n        if not self.validate(data):\n            raise ValueError(\"Invalid data\")\n        return self.transform(data)\n    \n    def validate(self, data):\n        # Validation logic\n        return data is not None",
      "relevance": "critical",
      "relationship": "calls",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        79,
        68
      ]
    },
    {
      "file_path": "models/file_44.py",
      "content": "class CriticalComponent:\n    def process(self, data):\n        # Critical logic related to cross_category\n        if not self.validate(data):\n            raise ValueError(\"Invalid data\")\n        return self.transform(data)\n    \n    def validate(self, data):\n        # Validation logic\n        return data is not None",
      "relevance": "critical",
      "relationship": "uses",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        112,
        129,
        60,
        155,
        101
      ]
    },
    {
      "file_path": "controllers/file_45.py",
      "content": "# Helper code for cross_category\ndef helper(): pass",
      "relevance": "low",
      "relationship": "uses",
      "specific_issue": "Related to cross_category issue",
      "line_numbers": [
        25,
        69
      ]
    }
  ],
  "temporal_info": {
    "bug_introduced": "2024-09-11",
    "temporal_spread_days": 330,
    "refactoring_events": 1,
    "related_commits": [
      {
        "hash": "5fd67fb9",
        "date": "2024-10-30",
        "message": "Refactored module 0",
        "files": [
          "file_0.py",
          "file_1.py",
          "file_2.py",
          "file_3.py"
        ]
      },
      {
        "hash": "94d3bf18",
        "date": "2025-03-14",
        "message": "Refactored module 1",
        "files": [
          "file_0.py",
          "file_1.py",
          "file_2.py",
          "file_3.py",
          "file_4.py"
        ]
      },
      {
        "hash": "b9169d7a",
        "date": "2025-07-06",
        "message": "Refactored module 2",
        "files": [
          "file_0.py",
          "file_1.py",
          "file_2.py"
        ]
      },
      {
        "hash": "d7263f20",
        "date": "2025-01-13",
        "message": "Refactored module 3",
        "files": [
          "file_0.py",
          "file_1.py",
          "file_2.py",
          "file_3.py",
          "file_4.py"
        ]
      }
    ]
  },
  "retrieval_paths": {
    "explicit": [
      {
        "from": "models/file_1.py",
        "to": "services/file_2.py",
        "type": "extends"
      },
      {
        "from": "services/file_2.py",
        "to": "utils/file_3.py",
        "type": "imports"
      },
      {
        "from": "utils/file_3.py",
        "to": "services/file_4.py",
        "type": "imports"
      },
      {
        "from": "services/file_4.py",
        "to": "controllers/file_5.py",
        "type": "calls"
      },
      {
        "from": "controllers/file_5.py",
        "to": "core/file_6.py",
        "type": "imports"
      }
    ],
    "implicit": [
      {
        "files": [
          "models/file_22.py",
          "utils/file_29.py",
          "models/file_30.py"
        ],
        "pattern": "shared_dependency"
      },
      {
        "files": [
          "services/file_7.py",
          "services/file_38.py",
          "core/file_37.py"
        ],
        "pattern": "shared_dependency"
      },
      {
        "files": [
          "services/file_8.py",
          "models/file_21.py",
          "controllers/file_45.py"
        ],
        "pattern": "shared_dependency"
      }
    ],
    "compositional": [
      {
        "path": [
          "services/file_8.py",
          "core/file_6.py"
        ],
        "depth": 1
      },
      {
        "path": [
          "services/file_23.py",
          "core/file_37.py",
          "controllers/file_36.py"
        ],
        "depth": 2
      },
      {
        "path": [
          "services/file_2.py",
          "utils/file_3.py",
          "controllers/file_45.py",
          "utils/file_29.py"
        ],
        "depth": 3
      },
      {
        "path": [
          "core/file_13.py",
          "core/file_15.py",
          "core/file_16.py",
          "services/file_7.py",
          "models/file_22.py"
        ],
        "depth": 4
      },
      {
        "path": [
          "utils/file_29.py",
          "controllers/file_45.py",
          "models/file_21.py",
          "models/file_20.py",
          "services/file_24.py",
          "helpers/file_32.py"
        ],
        "depth": 5
      }
    ]
  },
  "obfuscation": {
    "obfuscation_level": "high",
    "renamed_entities": {
      "entity_0": "SHsfYIpvjl",
      "entity_1": "FEDoRQBMTO",
      "entity_2": "qqDUFeuhqV",
      "entity_3": "GcJUQIJJBQ",
      "entity_4": "pAjXFYAuVO",
      "entity_5": "JvVZYjIhST"
    },
    "moved_files": 5,
    "refactored_modules": 1
  },
  "ground_truth": {
    "root_cause": "complex_interaction in main processing logic",
    "fix_type": "multiple_fixes",
    "must_find_files": [
      "services/file_2.py",
      "utils/file_3.py",
      "services/file_4.py",
      "core/file_6.py",
      "services/file_7.py"
    ],
    "should_find_files": [
      "controllers/file_5.py",
      "services/file_8.py",
      "helpers/file_14.py"
    ],
    "expected_behavior": {
      "should_not_error": true,
      "expected_output": "Correct processing result",
      "performance_threshold": 0.5476948596831528
    }
  },
  "test_artifacts": [
    {
      "file_name": "test_cross_category_1.python",
      "test_code": "import unittest\n\nclass TestCross_Category(unittest.TestCase):\n    def test_scenario_1(self):\n        # Test for cross_category\n        result = function_under_test(test_data)\n        self.assertEqual(result, expected_result)\n",
      "test_type": "integration"
    },
    {
      "file_name": "test_cross_category_2.python",
      "test_code": "import unittest\n\nclass TestCross_Category(unittest.TestCase):\n    def test_scenario_2(self):\n        # Test for cross_category\n        result = function_under_test(test_data)\n        self.assertEqual(result, expected_result)\n",
      "test_type": "e2e"
    },
    {
      "file_name": "test_cross_category_3.python",
      "test_code": "import unittest\n\nclass TestCross_Category(unittest.TestCase):\n    def test_scenario_3(self):\n        # Test for cross_category\n        result = function_under_test(test_data)\n        self.assertEqual(result, expected_result)\n",
      "test_type": "unit"
    }
  ],
  "error_artifacts": [
    {
      "error_type": "cross_category",
      "error_message": "SystemError: Multiple failures detected",
      "stack_trace": "Traceback (most recent call last):\n  File \"main.py\", line 42, in <module>\n    result = process_data(input_data)\n  File \"processor.py\", line 15, in process_data\n    return transform(validate(data))\n  File \"validator.py\", line 8, in validate\n    raise ValueError(\"Invalid data\")\nValueError: Invalid data",
      "timestamp": "2025-08-07T02:22:51.868443"
    },
    {
      "error_type": "cross_category",
      "error_message": "SystemError: Multiple failures detected",
      "stack_trace": "Traceback (most recent call last):\n  File \"main.py\", line 42, in <module>\n    result = process_data(input_data)\n  File \"processor.py\", line 15, in process_data\n    return transform(validate(data))\n  File \"validator.py\", line 8, in validate\n    raise ValueError(\"Invalid data\")\nValueError: Invalid data",
      "timestamp": "2025-08-07T02:22:51.868444"
    }
  ],
  "symptoms": [
    "Generic symptom"
  ],
  "error_location": {
    "file": "main.py",
    "line": 147,
    "function": "process_function",
    "module": "services"
  },
  "evaluation_criteria": {
    "must_find_files": [
      "services/file_2.py",
      "utils/file_3.py",
      "core/file_16.py"
    ],
    "should_find_files": [
      "services/file_4.py",
      "core/file_6.py"
    ],
    "retrieval_threshold": 0.75,
    "fix_validation": "must_pass_tests"
  }
}