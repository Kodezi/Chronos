{
  "bug_id": "MRR-LOGIC_ERRORS-202508-0510",
  "category": "logic_errors",
  "subcategory": "off_by_one",
  "language": "python",
  "description": "Logic bug: off_by_one producing incorrect results",
  "complexity": {
    "spatial_distribution": 13,
    "temporal_spread_months": 5,
    "abstraction_layers": 2,
    "obfuscation_level": "medium",
    "cross_module_dependencies": 2,
    "artifact_types": 3
  },
  "code_snippets": {
    "buggy_code": "def get_last_element(arr):\n    return arr[len(arr)]",
    "fixed_code": "def get_last_element(arr):\n    return arr[len(arr) - 1]"
  },
  "scattered_context": [
    {
      "file_path": "utils/file_1.py",
      "content": "def important_function(param):\n    # Important logic for logic_errors\n    result = []\n    for item in param:\n        result.append(process_item(item))\n    return result",
      "relevance": "high",
      "relationship": "tests",
      "specific_issue": "Related to logic_errors issue",
      "line_numbers": [
        27
      ]
    },
    {
      "file_path": "utils/file_2.py",
      "content": "class CriticalComponent:\n    def process(self, data):\n        # Critical logic related to logic_errors\n        if not self.validate(data):\n            raise ValueError(\"Invalid data\")\n        return self.transform(data)\n    \n    def validate(self, data):\n        # Validation logic\n        return data is not None",
      "relevance": "critical",
      "relationship": "extends",
      "specific_issue": "Related to logic_errors issue",
      "line_numbers": [
        101,
        179,
        67,
        34,
        28
      ]
    },
    {
      "file_path": "services/file_3.py",
      "content": "# Helper code for logic_errors\ndef helper(): pass",
      "relevance": "medium",
      "relationship": "imports",
      "specific_issue": "Related to logic_errors issue",
      "line_numbers": [
        186,
        138,
        136,
        184
      ]
    },
    {
      "file_path": "services/file_4.py",
      "content": "# Helper code for logic_errors\ndef helper(): pass",
      "relevance": "medium",
      "relationship": "tests",
      "specific_issue": "Related to logic_errors issue",
      "line_numbers": [
        71,
        37,
        113
      ]
    },
    {
      "file_path": "controllers/file_5.py",
      "content": "# Helper code for logic_errors\ndef helper(): pass",
      "relevance": "low",
      "relationship": "calls",
      "specific_issue": "Related to logic_errors issue",
      "line_numbers": [
        72,
        191
      ]
    },
    {
      "file_path": "services/file_6.py",
      "content": "class CriticalComponent:\n    def process(self, data):\n        # Critical logic related to logic_errors\n        if not self.validate(data):\n            raise ValueError(\"Invalid data\")\n        return self.transform(data)\n    \n    def validate(self, data):\n        # Validation logic\n        return data is not None",
      "relevance": "critical",
      "relationship": "calls",
      "specific_issue": "Related to logic_errors issue",
      "line_numbers": [
        131,
        187
      ]
    },
    {
      "file_path": "helpers/file_7.py",
      "content": "# Helper code for logic_errors\ndef helper(): pass",
      "relevance": "medium",
      "relationship": "tests",
      "specific_issue": "Related to logic_errors issue",
      "line_numbers": [
        65,
        192,
        179,
        40
      ]
    },
    {
      "file_path": "core/file_8.py",
      "content": "# Helper code for logic_errors\ndef helper(): pass",
      "relevance": "medium",
      "relationship": "extends",
      "specific_issue": "Related to logic_errors issue",
      "line_numbers": [
        71,
        42,
        18,
        186
      ]
    },
    {
      "file_path": "models/file_9.py",
      "content": "class CriticalComponent:\n    def process(self, data):\n        # Critical logic related to logic_errors\n        if not self.validate(data):\n            raise ValueError(\"Invalid data\")\n        return self.transform(data)\n    \n    def validate(self, data):\n        # Validation logic\n        return data is not None",
      "relevance": "critical",
      "relationship": "tests",
      "specific_issue": "Related to logic_errors issue",
      "line_numbers": [
        148
      ]
    },
    {
      "file_path": "core/file_10.py",
      "content": "# Helper code for logic_errors\ndef helper(): pass",
      "relevance": "medium",
      "relationship": "uses",
      "specific_issue": "Related to logic_errors issue",
      "line_numbers": [
        138,
        198,
        82,
        93,
        15
      ]
    },
    {
      "file_path": "controllers/file_11.py",
      "content": "def important_function(param):\n    # Important logic for logic_errors\n    result = []\n    for item in param:\n        result.append(process_item(item))\n    return result",
      "relevance": "high",
      "relationship": "uses",
      "specific_issue": "Related to logic_errors issue",
      "line_numbers": [
        76
      ]
    },
    {
      "file_path": "helpers/file_12.py",
      "content": "# Helper code for logic_errors\ndef helper(): pass",
      "relevance": "medium",
      "relationship": "calls",
      "specific_issue": "Related to logic_errors issue",
      "line_numbers": [
        167
      ]
    },
    {
      "file_path": "controllers/file_13.py",
      "content": "# Helper code for logic_errors\ndef helper(): pass",
      "relevance": "medium",
      "relationship": "uses",
      "specific_issue": "Related to logic_errors issue",
      "line_numbers": [
        107,
        45
      ]
    }
  ],
  "temporal_info": {
    "bug_introduced": "2025-03-10",
    "temporal_spread_days": 150,
    "refactoring_events": 0,
    "related_commits": [
      {
        "hash": "5fd67fb9",
        "date": "2025-04-22",
        "message": "Refactored module 0",
        "files": [
          "file_0.py",
          "file_1.py",
          "file_2.py",
          "file_3.py",
          "file_4.py"
        ]
      },
      {
        "hash": "94d3bf18",
        "date": "2025-04-19",
        "message": "Refactored module 1",
        "files": [
          "file_0.py",
          "file_1.py"
        ]
      },
      {
        "hash": "b9169d7a",
        "date": "2025-03-12",
        "message": "Refactored module 2",
        "files": [
          "file_0.py",
          "file_1.py",
          "file_2.py",
          "file_3.py",
          "file_4.py"
        ]
      },
      {
        "hash": "d7263f20",
        "date": "2025-04-08",
        "message": "Refactored module 3",
        "files": [
          "file_0.py",
          "file_1.py",
          "file_2.py",
          "file_3.py"
        ]
      },
      {
        "hash": "8416941f",
        "date": "2025-05-30",
        "message": "Refactored module 4",
        "files": [
          "file_0.py",
          "file_1.py"
        ]
      },
      {
        "hash": "edd0a651",
        "date": "2025-05-28",
        "message": "Refactored module 5",
        "files": [
          "file_0.py",
          "file_1.py",
          "file_2.py",
          "file_3.py",
          "file_4.py"
        ]
      },
      {
        "hash": "a67f5b4e",
        "date": "2025-06-05",
        "message": "Refactored module 6",
        "files": [
          "file_0.py",
          "file_1.py",
          "file_2.py",
          "file_3.py"
        ]
      }
    ]
  },
  "retrieval_paths": {
    "explicit": [
      {
        "from": "utils/file_1.py",
        "to": "utils/file_2.py",
        "type": "extends"
      },
      {
        "from": "utils/file_2.py",
        "to": "services/file_3.py",
        "type": "calls"
      },
      {
        "from": "services/file_3.py",
        "to": "services/file_4.py",
        "type": "imports"
      },
      {
        "from": "services/file_4.py",
        "to": "controllers/file_5.py",
        "type": "extends"
      },
      {
        "from": "controllers/file_5.py",
        "to": "services/file_6.py",
        "type": "calls"
      }
    ],
    "implicit": [
      {
        "files": [
          "helpers/file_7.py",
          "controllers/file_5.py",
          "helpers/file_12.py"
        ],
        "pattern": "shared_dependency"
      },
      {
        "files": [
          "models/file_9.py",
          "controllers/file_5.py",
          "helpers/file_7.py"
        ],
        "pattern": "shared_dependency"
      },
      {
        "files": [
          "controllers/file_13.py",
          "services/file_6.py",
          "utils/file_1.py"
        ],
        "pattern": "shared_dependency"
      }
    ],
    "compositional": [
      {
        "path": [
          "services/file_6.py",
          "services/file_3.py"
        ],
        "depth": 1
      },
      {
        "path": [
          "utils/file_2.py",
          "services/file_4.py",
          "controllers/file_5.py"
        ],
        "depth": 2
      }
    ]
  },
  "obfuscation": {
    "obfuscation_level": "medium",
    "renamed_entities": {
      "function_0": "naogmvkz",
      "function_1": "firiagsl",
      "function_2": "xunaiifh"
    },
    "moved_files": 5,
    "refactored_modules": 0
  },
  "ground_truth": {
    "root_cause": "off_by_one in main processing logic",
    "fix_type": "logic_correction",
    "must_find_files": [
      "utils/file_1.py",
      "utils/file_2.py",
      "services/file_6.py",
      "models/file_9.py",
      "controllers/file_11.py"
    ],
    "should_find_files": [
      "services/file_3.py",
      "services/file_4.py",
      "helpers/file_7.py"
    ],
    "expected_behavior": {
      "should_not_error": true,
      "expected_output": "Correct processing result",
      "performance_threshold": 1.5041609233808946
    }
  },
  "test_artifacts": [
    {
      "file_name": "test_logic_errors_1.python",
      "test_code": "import unittest\n\nclass TestLogic_Errors(unittest.TestCase):\n    def test_scenario_1(self):\n        # Test for logic_errors\n        result = function_under_test(test_data)\n        self.assertEqual(result, expected_result)\n",
      "test_type": "e2e"
    }
  ],
  "error_artifacts": [
    {
      "error_type": "logic_errors",
      "error_message": "AssertionError: Expected 5 but got 4",
      "stack_trace": "Traceback (most recent call last):\n  File \"main.py\", line 42, in <module>\n    result = process_data(input_data)\n  File \"processor.py\", line 15, in process_data\n    return transform(validate(data))\n  File \"validator.py\", line 8, in validate\n    raise ValueError(\"Invalid data\")\nValueError: Invalid data",
      "timestamp": "2025-08-07T02:22:49.843539"
    }
  ],
  "symptoms": [
    "Incorrect output produced",
    "Test cases failing",
    "Unexpected behavior"
  ],
  "error_location": {
    "file": "main.py",
    "line": 153,
    "function": "process_function",
    "module": "utils"
  },
  "evaluation_criteria": {
    "must_find_files": [
      "utils/file_2.py",
      "services/file_6.py",
      "models/file_9.py"
    ],
    "should_find_files": [
      "utils/file_1.py",
      "controllers/file_11.py"
    ],
    "retrieval_threshold": 0.75,
    "fix_validation": "must_pass_tests"
  }
}