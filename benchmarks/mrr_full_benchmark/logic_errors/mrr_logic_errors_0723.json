{
  "bug_id": "MRR-LOGIC_ERRORS-202508-0723",
  "category": "logic_errors",
  "subcategory": "incorrect_operator",
  "language": "python",
  "description": "Logic bug: incorrect_operator producing incorrect results",
  "complexity": {
    "spatial_distribution": 10,
    "temporal_spread_months": 3,
    "abstraction_layers": 4,
    "obfuscation_level": "low",
    "cross_module_dependencies": 4,
    "artifact_types": 4
  },
  "code_snippets": {
    "buggy_code": "def is_even(n):\n    return n / 2 == 0",
    "fixed_code": "def is_even(n):\n    return n % 2 == 0"
  },
  "scattered_context": [
    {
      "file_path": "models/file_1.py",
      "content": "# Helper code for logic_errors\ndef helper(): pass",
      "relevance": "medium",
      "relationship": "implements",
      "specific_issue": "Related to logic_errors issue",
      "line_numbers": [
        148
      ]
    },
    {
      "file_path": "core/file_2.py",
      "content": "# Helper code for logic_errors\ndef helper(): pass",
      "relevance": "medium",
      "relationship": "implements",
      "specific_issue": "Related to logic_errors issue",
      "line_numbers": [
        89,
        12,
        150,
        111,
        132
      ]
    },
    {
      "file_path": "controllers/file_3.py",
      "content": "class CriticalComponent:\n    def process(self, data):\n        # Critical logic related to logic_errors\n        if not self.validate(data):\n            raise ValueError(\"Invalid data\")\n        return self.transform(data)\n    \n    def validate(self, data):\n        # Validation logic\n        return data is not None",
      "relevance": "critical",
      "relationship": "uses",
      "specific_issue": "Related to logic_errors issue",
      "line_numbers": [
        81
      ]
    },
    {
      "file_path": "controllers/file_4.py",
      "content": "class CriticalComponent:\n    def process(self, data):\n        # Critical logic related to logic_errors\n        if not self.validate(data):\n            raise ValueError(\"Invalid data\")\n        return self.transform(data)\n    \n    def validate(self, data):\n        # Validation logic\n        return data is not None",
      "relevance": "critical",
      "relationship": "imports",
      "specific_issue": "Related to logic_errors issue",
      "line_numbers": [
        34,
        126,
        31,
        82,
        156
      ]
    },
    {
      "file_path": "utils/file_5.py",
      "content": "# Helper code for logic_errors\ndef helper(): pass",
      "relevance": "medium",
      "relationship": "imports",
      "specific_issue": "Related to logic_errors issue",
      "line_numbers": [
        131
      ]
    },
    {
      "file_path": "controllers/file_6.py",
      "content": "def important_function(param):\n    # Important logic for logic_errors\n    result = []\n    for item in param:\n        result.append(process_item(item))\n    return result",
      "relevance": "high",
      "relationship": "extends",
      "specific_issue": "Related to logic_errors issue",
      "line_numbers": [
        96,
        102,
        21,
        118,
        59
      ]
    },
    {
      "file_path": "models/file_7.py",
      "content": "# Helper code for logic_errors\ndef helper(): pass",
      "relevance": "low",
      "relationship": "imports",
      "specific_issue": "Related to logic_errors issue",
      "line_numbers": [
        52,
        76,
        183,
        23,
        87
      ]
    },
    {
      "file_path": "models/file_8.py",
      "content": "# Helper code for logic_errors\ndef helper(): pass",
      "relevance": "low",
      "relationship": "uses",
      "specific_issue": "Related to logic_errors issue",
      "line_numbers": [
        174
      ]
    },
    {
      "file_path": "core/file_9.py",
      "content": "class CriticalComponent:\n    def process(self, data):\n        # Critical logic related to logic_errors\n        if not self.validate(data):\n            raise ValueError(\"Invalid data\")\n        return self.transform(data)\n    \n    def validate(self, data):\n        # Validation logic\n        return data is not None",
      "relevance": "critical",
      "relationship": "tests",
      "specific_issue": "Related to logic_errors issue",
      "line_numbers": [
        124
      ]
    },
    {
      "file_path": "models/file_10.py",
      "content": "class CriticalComponent:\n    def process(self, data):\n        # Critical logic related to logic_errors\n        if not self.validate(data):\n            raise ValueError(\"Invalid data\")\n        return self.transform(data)\n    \n    def validate(self, data):\n        # Validation logic\n        return data is not None",
      "relevance": "critical",
      "relationship": "extends",
      "specific_issue": "Related to logic_errors issue",
      "line_numbers": [
        106,
        29,
        55,
        84
      ]
    }
  ],
  "temporal_info": {
    "bug_introduced": "2025-05-09",
    "temporal_spread_days": 90,
    "refactoring_events": 3,
    "related_commits": [
      {
        "hash": "5fd67fb9",
        "date": "2025-05-20",
        "message": "Refactored module 0",
        "files": [
          "file_0.py"
        ]
      },
      {
        "hash": "94d3bf18",
        "date": "2025-05-13",
        "message": "Refactored module 1",
        "files": [
          "file_0.py"
        ]
      },
      {
        "hash": "b9169d7a",
        "date": "2025-06-19",
        "message": "Refactored module 2",
        "files": [
          "file_0.py",
          "file_1.py",
          "file_2.py",
          "file_3.py",
          "file_4.py"
        ]
      },
      {
        "hash": "d7263f20",
        "date": "2025-06-26",
        "message": "Refactored module 3",
        "files": [
          "file_0.py",
          "file_1.py",
          "file_2.py",
          "file_3.py",
          "file_4.py"
        ]
      },
      {
        "hash": "8416941f",
        "date": "2025-06-28",
        "message": "Refactored module 4",
        "files": [
          "file_0.py",
          "file_1.py",
          "file_2.py"
        ]
      },
      {
        "hash": "edd0a651",
        "date": "2025-06-28",
        "message": "Refactored module 5",
        "files": [
          "file_0.py",
          "file_1.py",
          "file_2.py",
          "file_3.py",
          "file_4.py"
        ]
      }
    ]
  },
  "retrieval_paths": {
    "explicit": [
      {
        "from": "models/file_1.py",
        "to": "core/file_2.py",
        "type": "extends"
      },
      {
        "from": "core/file_2.py",
        "to": "controllers/file_3.py",
        "type": "imports"
      },
      {
        "from": "controllers/file_3.py",
        "to": "controllers/file_4.py",
        "type": "calls"
      },
      {
        "from": "controllers/file_4.py",
        "to": "utils/file_5.py",
        "type": "extends"
      },
      {
        "from": "utils/file_5.py",
        "to": "controllers/file_6.py",
        "type": "calls"
      }
    ],
    "implicit": [
      {
        "files": [
          "core/file_2.py",
          "models/file_10.py",
          "controllers/file_6.py"
        ],
        "pattern": "shared_dependency"
      },
      {
        "files": [
          "utils/file_5.py",
          "core/file_9.py",
          "controllers/file_6.py"
        ],
        "pattern": "shared_dependency"
      },
      {
        "files": [
          "core/file_9.py",
          "utils/file_5.py",
          "controllers/file_3.py"
        ],
        "pattern": "shared_dependency"
      }
    ],
    "compositional": [
      {
        "path": [
          "controllers/file_3.py",
          "models/file_10.py"
        ],
        "depth": 1
      },
      {
        "path": [
          "models/file_1.py",
          "models/file_7.py",
          "controllers/file_4.py"
        ],
        "depth": 2
      },
      {
        "path": [
          "utils/file_5.py",
          "controllers/file_6.py",
          "core/file_2.py",
          "core/file_9.py"
        ],
        "depth": 3
      },
      {
        "path": [
          "controllers/file_6.py",
          "models/file_7.py",
          "models/file_8.py",
          "models/file_1.py",
          "core/file_9.py"
        ],
        "depth": 4
      }
    ]
  },
  "obfuscation": {
    "obfuscation_level": "low",
    "renamed_entities": {
      "variable_0": "var_0",
      "variable_1": "var_1"
    },
    "moved_files": 0,
    "refactored_modules": 0
  },
  "ground_truth": {
    "root_cause": "incorrect_operator in main processing logic",
    "fix_type": "logic_correction",
    "must_find_files": [
      "controllers/file_3.py",
      "controllers/file_4.py",
      "controllers/file_6.py",
      "core/file_9.py",
      "models/file_10.py"
    ],
    "should_find_files": [
      "models/file_1.py",
      "core/file_2.py",
      "utils/file_5.py"
    ],
    "expected_behavior": {
      "should_not_error": true,
      "expected_output": "Correct processing result",
      "performance_threshold": 1.284304626516674
    }
  },
  "test_artifacts": [
    {
      "file_name": "test_logic_errors_1.python",
      "test_code": "import unittest\n\nclass TestLogic_Errors(unittest.TestCase):\n    def test_scenario_1(self):\n        # Test for logic_errors\n        result = function_under_test(test_data)\n        self.assertEqual(result, expected_result)\n",
      "test_type": "e2e"
    },
    {
      "file_name": "test_logic_errors_2.python",
      "test_code": "import unittest\n\nclass TestLogic_Errors(unittest.TestCase):\n    def test_scenario_2(self):\n        # Test for logic_errors\n        result = function_under_test(test_data)\n        self.assertEqual(result, expected_result)\n",
      "test_type": "unit"
    }
  ],
  "error_artifacts": [
    {
      "error_type": "logic_errors",
      "error_message": "AssertionError: Expected 5 but got 4",
      "stack_trace": "Traceback (most recent call last):\n  File \"main.py\", line 42, in <module>\n    result = process_data(input_data)\n  File \"processor.py\", line 15, in process_data\n    return transform(validate(data))\n  File \"validator.py\", line 8, in validate\n    raise ValueError(\"Invalid data\")\nValueError: Invalid data",
      "timestamp": "2025-08-07T02:22:49.935507"
    }
  ],
  "symptoms": [
    "Incorrect output produced",
    "Test cases failing",
    "Unexpected behavior"
  ],
  "error_location": {
    "file": "main.py",
    "line": 176,
    "function": "process_function",
    "module": "core"
  },
  "evaluation_criteria": {
    "must_find_files": [
      "controllers/file_3.py",
      "controllers/file_4.py",
      "core/file_9.py"
    ],
    "should_find_files": [
      "controllers/file_6.py"
    ],
    "retrieval_threshold": 0.75,
    "fix_validation": "must_pass_tests"
  }
}