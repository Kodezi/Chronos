{
  "bug_id": "MRR-LOGIC_ERRORS-202508-1068",
  "category": "logic_errors",
  "subcategory": "infinite_loop",
  "language": "python",
  "description": "Logic bug: infinite_loop producing incorrect results",
  "complexity": {
    "spatial_distribution": 8,
    "temporal_spread_months": 3,
    "abstraction_layers": 4,
    "obfuscation_level": "low",
    "cross_module_dependencies": 4,
    "artifact_types": 5
  },
  "code_snippets": {
    "buggy_code": "def buggy_function_infinite_loop(data):\n    # Bug: infinite_loop\n    result = []\n    for item in data:\n        # Buggy logic here\n        if item > 0:\n            result.append(item)\n    return result",
    "fixed_code": "def fixed_function_infinite_loop(data):\n    # Fixed: infinite_loop\n    result = []\n    for item in data:\n        # Fixed logic here\n        if item >= 0:\n            result.append(item)\n    return result"
  },
  "scattered_context": [
    {
      "file_path": "utils/file_1.py",
      "content": "def important_function(param):\n    # Important logic for logic_errors\n    result = []\n    for item in param:\n        result.append(process_item(item))\n    return result",
      "relevance": "high",
      "relationship": "implements",
      "specific_issue": "Related to logic_errors issue",
      "line_numbers": [
        66
      ]
    },
    {
      "file_path": "models/file_2.py",
      "content": "# Helper code for logic_errors\ndef helper(): pass",
      "relevance": "medium",
      "relationship": "tests",
      "specific_issue": "Related to logic_errors issue",
      "line_numbers": [
        149,
        130,
        33
      ]
    },
    {
      "file_path": "core/file_3.py",
      "content": "# Helper code for logic_errors\ndef helper(): pass",
      "relevance": "low",
      "relationship": "calls",
      "specific_issue": "Related to logic_errors issue",
      "line_numbers": [
        138,
        75,
        123,
        98
      ]
    },
    {
      "file_path": "models/file_4.py",
      "content": "def important_function(param):\n    # Important logic for logic_errors\n    result = []\n    for item in param:\n        result.append(process_item(item))\n    return result",
      "relevance": "high",
      "relationship": "implements",
      "specific_issue": "Related to logic_errors issue",
      "line_numbers": [
        81,
        75
      ]
    },
    {
      "file_path": "utils/file_5.py",
      "content": "def important_function(param):\n    # Important logic for logic_errors\n    result = []\n    for item in param:\n        result.append(process_item(item))\n    return result",
      "relevance": "high",
      "relationship": "implements",
      "specific_issue": "Related to logic_errors issue",
      "line_numbers": [
        57,
        115,
        132,
        185,
        175
      ]
    },
    {
      "file_path": "services/file_6.py",
      "content": "# Helper code for logic_errors\ndef helper(): pass",
      "relevance": "medium",
      "relationship": "extends",
      "specific_issue": "Related to logic_errors issue",
      "line_numbers": [
        57
      ]
    },
    {
      "file_path": "services/file_7.py",
      "content": "# Helper code for logic_errors\ndef helper(): pass",
      "relevance": "low",
      "relationship": "extends",
      "specific_issue": "Related to logic_errors issue",
      "line_numbers": [
        37,
        187
      ]
    },
    {
      "file_path": "models/file_8.py",
      "content": "# Helper code for logic_errors\ndef helper(): pass",
      "relevance": "low",
      "relationship": "implements",
      "specific_issue": "Related to logic_errors issue",
      "line_numbers": [
        30,
        54,
        151,
        195,
        40
      ]
    }
  ],
  "temporal_info": {
    "bug_introduced": "2025-05-09",
    "temporal_spread_days": 90,
    "refactoring_events": 1,
    "related_commits": [
      {
        "hash": "5fd67fb9",
        "date": "2025-08-06",
        "message": "Refactored module 0",
        "files": [
          "file_0.py",
          "file_1.py",
          "file_2.py"
        ]
      },
      {
        "hash": "94d3bf18",
        "date": "2025-08-07",
        "message": "Refactored module 1",
        "files": [
          "file_0.py",
          "file_1.py"
        ]
      },
      {
        "hash": "b9169d7a",
        "date": "2025-06-15",
        "message": "Refactored module 2",
        "files": [
          "file_0.py",
          "file_1.py"
        ]
      },
      {
        "hash": "d7263f20",
        "date": "2025-05-30",
        "message": "Refactored module 3",
        "files": [
          "file_0.py",
          "file_1.py",
          "file_2.py",
          "file_3.py"
        ]
      },
      {
        "hash": "8416941f",
        "date": "2025-07-12",
        "message": "Refactored module 4",
        "files": [
          "file_0.py",
          "file_1.py",
          "file_2.py"
        ]
      },
      {
        "hash": "edd0a651",
        "date": "2025-06-02",
        "message": "Refactored module 5",
        "files": [
          "file_0.py",
          "file_1.py",
          "file_2.py",
          "file_3.py"
        ]
      },
      {
        "hash": "a67f5b4e",
        "date": "2025-06-09",
        "message": "Refactored module 6",
        "files": [
          "file_0.py"
        ]
      },
      {
        "hash": "e32a385c",
        "date": "2025-05-16",
        "message": "Refactored module 7",
        "files": [
          "file_0.py",
          "file_1.py",
          "file_2.py"
        ]
      },
      {
        "hash": "740b3cf2",
        "date": "2025-06-14",
        "message": "Refactored module 8",
        "files": [
          "file_0.py",
          "file_1.py",
          "file_2.py"
        ]
      }
    ]
  },
  "retrieval_paths": {
    "explicit": [
      {
        "from": "utils/file_1.py",
        "to": "models/file_2.py",
        "type": "calls"
      },
      {
        "from": "models/file_2.py",
        "to": "core/file_3.py",
        "type": "extends"
      },
      {
        "from": "core/file_3.py",
        "to": "models/file_4.py",
        "type": "imports"
      },
      {
        "from": "models/file_4.py",
        "to": "utils/file_5.py",
        "type": "calls"
      },
      {
        "from": "utils/file_5.py",
        "to": "services/file_6.py",
        "type": "extends"
      }
    ],
    "implicit": [
      {
        "files": [
          "models/file_2.py",
          "core/file_3.py",
          "services/file_6.py"
        ],
        "pattern": "shared_dependency"
      },
      {
        "files": [
          "models/file_4.py",
          "models/file_2.py",
          "utils/file_1.py"
        ],
        "pattern": "shared_dependency"
      },
      {
        "files": [
          "core/file_3.py",
          "utils/file_5.py",
          "services/file_6.py"
        ],
        "pattern": "shared_dependency"
      }
    ],
    "compositional": [
      {
        "path": [
          "utils/file_1.py",
          "models/file_2.py"
        ],
        "depth": 1
      },
      {
        "path": [
          "services/file_7.py",
          "utils/file_1.py",
          "core/file_3.py"
        ],
        "depth": 2
      },
      {
        "path": [
          "models/file_4.py",
          "core/file_3.py",
          "models/file_8.py",
          "utils/file_1.py"
        ],
        "depth": 3
      },
      {
        "path": [
          "core/file_3.py",
          "utils/file_1.py",
          "services/file_7.py",
          "models/file_2.py",
          "models/file_8.py"
        ],
        "depth": 4
      }
    ]
  },
  "obfuscation": {
    "obfuscation_level": "low",
    "renamed_entities": {
      "variable_0": "var_0",
      "variable_1": "var_1",
      "variable_2": "var_2"
    },
    "moved_files": 0,
    "refactored_modules": 0
  },
  "ground_truth": {
    "root_cause": "infinite_loop in main processing logic",
    "fix_type": "logic_correction",
    "must_find_files": [
      "utils/file_1.py",
      "models/file_4.py",
      "utils/file_5.py"
    ],
    "should_find_files": [
      "models/file_2.py",
      "services/file_6.py"
    ],
    "expected_behavior": {
      "should_not_error": true,
      "expected_output": "Correct processing result",
      "performance_threshold": 1.2520261163241664
    }
  },
  "test_artifacts": [
    {
      "file_name": "test_logic_errors_1.python",
      "test_code": "import unittest\n\nclass TestLogic_Errors(unittest.TestCase):\n    def test_scenario_1(self):\n        # Test for logic_errors\n        result = function_under_test(test_data)\n        self.assertEqual(result, expected_result)\n",
      "test_type": "unit"
    }
  ],
  "error_artifacts": [
    {
      "error_type": "logic_errors",
      "error_message": "AssertionError: Expected 5 but got 4",
      "stack_trace": "Traceback (most recent call last):\n  File \"main.py\", line 42, in <module>\n    result = process_data(input_data)\n  File \"processor.py\", line 15, in process_data\n    return transform(validate(data))\n  File \"validator.py\", line 8, in validate\n    raise ValueError(\"Invalid data\")\nValueError: Invalid data",
      "timestamp": "2025-08-07T02:22:50.092374"
    }
  ],
  "symptoms": [
    "Incorrect output produced",
    "Test cases failing",
    "Unexpected behavior"
  ],
  "error_location": {
    "file": "main.py",
    "line": 176,
    "function": "process_function",
    "module": "services"
  },
  "evaluation_criteria": {
    "must_find_files": [],
    "should_find_files": [
      "utils/file_1.py",
      "models/file_4.py"
    ],
    "retrieval_threshold": 0.75,
    "fix_validation": "must_pass_tests"
  }
}