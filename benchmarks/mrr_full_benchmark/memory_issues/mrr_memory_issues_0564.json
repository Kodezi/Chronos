{
  "bug_id": "MRR-MEMORY_ISSUES-202508-0564",
  "category": "memory_issues",
  "subcategory": "stack_overflow",
  "language": "python",
  "description": "Memory issue: stack_overflow causing memory problems",
  "complexity": {
    "spatial_distribution": 26,
    "temporal_spread_months": 10,
    "abstraction_layers": 5,
    "obfuscation_level": "high",
    "cross_module_dependencies": 9,
    "artifact_types": 2
  },
  "code_snippets": {
    "buggy_code": "def buggy_function_stack_overflow(data):\n    # Bug: stack_overflow\n    result = []\n    for item in data:\n        # Buggy logic here\n        if item > 0:\n            result.append(item)\n    return result",
    "fixed_code": "def fixed_function_stack_overflow(data):\n    # Fixed: stack_overflow\n    result = []\n    for item in data:\n        # Fixed logic here\n        if item >= 0:\n            result.append(item)\n    return result"
  },
  "scattered_context": [
    {
      "file_path": "services/file_1.py",
      "content": "class CriticalComponent:\n    def process(self, data):\n        # Critical logic related to memory_issues\n        if not self.validate(data):\n            raise ValueError(\"Invalid data\")\n        return self.transform(data)\n    \n    def validate(self, data):\n        # Validation logic\n        return data is not None",
      "relevance": "critical",
      "relationship": "extends",
      "specific_issue": "Related to memory_issues issue",
      "line_numbers": [
        105,
        159,
        39,
        182,
        109
      ]
    },
    {
      "file_path": "utils/file_2.py",
      "content": "class CriticalComponent:\n    def process(self, data):\n        # Critical logic related to memory_issues\n        if not self.validate(data):\n            raise ValueError(\"Invalid data\")\n        return self.transform(data)\n    \n    def validate(self, data):\n        # Validation logic\n        return data is not None",
      "relevance": "critical",
      "relationship": "uses",
      "specific_issue": "Related to memory_issues issue",
      "line_numbers": [
        73,
        42,
        13,
        83,
        60
      ]
    },
    {
      "file_path": "helpers/file_3.py",
      "content": "# Helper code for memory_issues\ndef helper(): pass",
      "relevance": "medium",
      "relationship": "tests",
      "specific_issue": "Related to memory_issues issue",
      "line_numbers": [
        39
      ]
    },
    {
      "file_path": "services/file_4.py",
      "content": "# Helper code for memory_issues\ndef helper(): pass",
      "relevance": "medium",
      "relationship": "uses",
      "specific_issue": "Related to memory_issues issue",
      "line_numbers": [
        41,
        16
      ]
    },
    {
      "file_path": "core/file_5.py",
      "content": "# Helper code for memory_issues\ndef helper(): pass",
      "relevance": "low",
      "relationship": "extends",
      "specific_issue": "Related to memory_issues issue",
      "line_numbers": [
        22,
        16,
        187,
        51,
        22
      ]
    },
    {
      "file_path": "helpers/file_6.py",
      "content": "def important_function(param):\n    # Important logic for memory_issues\n    result = []\n    for item in param:\n        result.append(process_item(item))\n    return result",
      "relevance": "high",
      "relationship": "imports",
      "specific_issue": "Related to memory_issues issue",
      "line_numbers": [
        196,
        56,
        34,
        130,
        137
      ]
    },
    {
      "file_path": "core/file_7.py",
      "content": "def important_function(param):\n    # Important logic for memory_issues\n    result = []\n    for item in param:\n        result.append(process_item(item))\n    return result",
      "relevance": "high",
      "relationship": "implements",
      "specific_issue": "Related to memory_issues issue",
      "line_numbers": [
        36,
        153,
        31,
        95
      ]
    },
    {
      "file_path": "models/file_8.py",
      "content": "# Helper code for memory_issues\ndef helper(): pass",
      "relevance": "low",
      "relationship": "implements",
      "specific_issue": "Related to memory_issues issue",
      "line_numbers": [
        62,
        159,
        151
      ]
    },
    {
      "file_path": "models/file_9.py",
      "content": "# Helper code for memory_issues\ndef helper(): pass",
      "relevance": "low",
      "relationship": "tests",
      "specific_issue": "Related to memory_issues issue",
      "line_numbers": [
        32,
        198,
        116
      ]
    },
    {
      "file_path": "controllers/file_10.py",
      "content": "def important_function(param):\n    # Important logic for memory_issues\n    result = []\n    for item in param:\n        result.append(process_item(item))\n    return result",
      "relevance": "high",
      "relationship": "tests",
      "specific_issue": "Related to memory_issues issue",
      "line_numbers": [
        45,
        128
      ]
    },
    {
      "file_path": "controllers/file_11.py",
      "content": "class CriticalComponent:\n    def process(self, data):\n        # Critical logic related to memory_issues\n        if not self.validate(data):\n            raise ValueError(\"Invalid data\")\n        return self.transform(data)\n    \n    def validate(self, data):\n        # Validation logic\n        return data is not None",
      "relevance": "critical",
      "relationship": "calls",
      "specific_issue": "Related to memory_issues issue",
      "line_numbers": [
        156,
        71,
        75
      ]
    },
    {
      "file_path": "helpers/file_12.py",
      "content": "# Helper code for memory_issues\ndef helper(): pass",
      "relevance": "medium",
      "relationship": "uses",
      "specific_issue": "Related to memory_issues issue",
      "line_numbers": [
        82,
        157,
        40,
        110,
        58
      ]
    },
    {
      "file_path": "models/file_13.py",
      "content": "class CriticalComponent:\n    def process(self, data):\n        # Critical logic related to memory_issues\n        if not self.validate(data):\n            raise ValueError(\"Invalid data\")\n        return self.transform(data)\n    \n    def validate(self, data):\n        # Validation logic\n        return data is not None",
      "relevance": "critical",
      "relationship": "extends",
      "specific_issue": "Related to memory_issues issue",
      "line_numbers": [
        32,
        197,
        22,
        185,
        71
      ]
    },
    {
      "file_path": "core/file_14.py",
      "content": "# Helper code for memory_issues\ndef helper(): pass",
      "relevance": "medium",
      "relationship": "imports",
      "specific_issue": "Related to memory_issues issue",
      "line_numbers": [
        190,
        115
      ]
    },
    {
      "file_path": "controllers/file_15.py",
      "content": "class CriticalComponent:\n    def process(self, data):\n        # Critical logic related to memory_issues\n        if not self.validate(data):\n            raise ValueError(\"Invalid data\")\n        return self.transform(data)\n    \n    def validate(self, data):\n        # Validation logic\n        return data is not None",
      "relevance": "critical",
      "relationship": "implements",
      "specific_issue": "Related to memory_issues issue",
      "line_numbers": [
        46,
        169,
        164,
        40
      ]
    },
    {
      "file_path": "controllers/file_16.py",
      "content": "class CriticalComponent:\n    def process(self, data):\n        # Critical logic related to memory_issues\n        if not self.validate(data):\n            raise ValueError(\"Invalid data\")\n        return self.transform(data)\n    \n    def validate(self, data):\n        # Validation logic\n        return data is not None",
      "relevance": "critical",
      "relationship": "imports",
      "specific_issue": "Related to memory_issues issue",
      "line_numbers": [
        168,
        22,
        162,
        199
      ]
    },
    {
      "file_path": "helpers/file_17.py",
      "content": "def important_function(param):\n    # Important logic for memory_issues\n    result = []\n    for item in param:\n        result.append(process_item(item))\n    return result",
      "relevance": "high",
      "relationship": "calls",
      "specific_issue": "Related to memory_issues issue",
      "line_numbers": [
        14,
        119,
        156
      ]
    },
    {
      "file_path": "controllers/file_18.py",
      "content": "# Helper code for memory_issues\ndef helper(): pass",
      "relevance": "low",
      "relationship": "implements",
      "specific_issue": "Related to memory_issues issue",
      "line_numbers": [
        194,
        17,
        97,
        75
      ]
    },
    {
      "file_path": "controllers/file_19.py",
      "content": "# Helper code for memory_issues\ndef helper(): pass",
      "relevance": "medium",
      "relationship": "implements",
      "specific_issue": "Related to memory_issues issue",
      "line_numbers": [
        195,
        145,
        24,
        32,
        194
      ]
    },
    {
      "file_path": "helpers/file_20.py",
      "content": "class CriticalComponent:\n    def process(self, data):\n        # Critical logic related to memory_issues\n        if not self.validate(data):\n            raise ValueError(\"Invalid data\")\n        return self.transform(data)\n    \n    def validate(self, data):\n        # Validation logic\n        return data is not None",
      "relevance": "critical",
      "relationship": "imports",
      "specific_issue": "Related to memory_issues issue",
      "line_numbers": [
        153
      ]
    },
    {
      "file_path": "utils/file_21.py",
      "content": "# Helper code for memory_issues\ndef helper(): pass",
      "relevance": "low",
      "relationship": "extends",
      "specific_issue": "Related to memory_issues issue",
      "line_numbers": [
        133,
        57,
        36,
        22,
        147
      ]
    },
    {
      "file_path": "core/file_22.py",
      "content": "# Helper code for memory_issues\ndef helper(): pass",
      "relevance": "medium",
      "relationship": "tests",
      "specific_issue": "Related to memory_issues issue",
      "line_numbers": [
        116,
        120,
        91,
        31
      ]
    },
    {
      "file_path": "models/file_23.py",
      "content": "# Helper code for memory_issues\ndef helper(): pass",
      "relevance": "medium",
      "relationship": "extends",
      "specific_issue": "Related to memory_issues issue",
      "line_numbers": [
        109
      ]
    },
    {
      "file_path": "controllers/file_24.py",
      "content": "def important_function(param):\n    # Important logic for memory_issues\n    result = []\n    for item in param:\n        result.append(process_item(item))\n    return result",
      "relevance": "high",
      "relationship": "implements",
      "specific_issue": "Related to memory_issues issue",
      "line_numbers": [
        143,
        52
      ]
    },
    {
      "file_path": "utils/file_25.py",
      "content": "def important_function(param):\n    # Important logic for memory_issues\n    result = []\n    for item in param:\n        result.append(process_item(item))\n    return result",
      "relevance": "high",
      "relationship": "uses",
      "specific_issue": "Related to memory_issues issue",
      "line_numbers": [
        151,
        139,
        35,
        12
      ]
    },
    {
      "file_path": "services/file_26.py",
      "content": "def important_function(param):\n    # Important logic for memory_issues\n    result = []\n    for item in param:\n        result.append(process_item(item))\n    return result",
      "relevance": "high",
      "relationship": "tests",
      "specific_issue": "Related to memory_issues issue",
      "line_numbers": [
        35,
        16,
        26,
        102,
        56
      ]
    }
  ],
  "temporal_info": {
    "bug_introduced": "2024-10-11",
    "temporal_spread_days": 300,
    "refactoring_events": 2,
    "related_commits": [
      {
        "hash": "5fd67fb9",
        "date": "2024-12-23",
        "message": "Refactored module 0",
        "files": [
          "file_0.py",
          "file_1.py",
          "file_2.py",
          "file_3.py"
        ]
      },
      {
        "hash": "94d3bf18",
        "date": "2025-01-24",
        "message": "Refactored module 1",
        "files": [
          "file_0.py",
          "file_1.py"
        ]
      },
      {
        "hash": "b9169d7a",
        "date": "2024-10-31",
        "message": "Refactored module 2",
        "files": [
          "file_0.py",
          "file_1.py",
          "file_2.py",
          "file_3.py"
        ]
      },
      {
        "hash": "d7263f20",
        "date": "2025-03-01",
        "message": "Refactored module 3",
        "files": [
          "file_0.py",
          "file_1.py",
          "file_2.py"
        ]
      },
      {
        "hash": "8416941f",
        "date": "2025-07-27",
        "message": "Refactored module 4",
        "files": [
          "file_0.py"
        ]
      },
      {
        "hash": "edd0a651",
        "date": "2025-04-18",
        "message": "Refactored module 5",
        "files": [
          "file_0.py",
          "file_1.py",
          "file_2.py"
        ]
      },
      {
        "hash": "a67f5b4e",
        "date": "2024-11-26",
        "message": "Refactored module 6",
        "files": [
          "file_0.py",
          "file_1.py",
          "file_2.py",
          "file_3.py"
        ]
      }
    ]
  },
  "retrieval_paths": {
    "explicit": [
      {
        "from": "services/file_1.py",
        "to": "utils/file_2.py",
        "type": "calls"
      },
      {
        "from": "utils/file_2.py",
        "to": "helpers/file_3.py",
        "type": "imports"
      },
      {
        "from": "helpers/file_3.py",
        "to": "services/file_4.py",
        "type": "imports"
      },
      {
        "from": "services/file_4.py",
        "to": "core/file_5.py",
        "type": "calls"
      },
      {
        "from": "core/file_5.py",
        "to": "helpers/file_6.py",
        "type": "extends"
      }
    ],
    "implicit": [
      {
        "files": [
          "core/file_22.py",
          "controllers/file_16.py",
          "controllers/file_24.py"
        ],
        "pattern": "shared_dependency"
      },
      {
        "files": [
          "controllers/file_10.py",
          "utils/file_21.py",
          "models/file_23.py"
        ],
        "pattern": "shared_dependency"
      },
      {
        "files": [
          "models/file_9.py",
          "models/file_8.py",
          "core/file_7.py"
        ],
        "pattern": "shared_dependency"
      }
    ],
    "compositional": [
      {
        "path": [
          "utils/file_25.py",
          "controllers/file_16.py"
        ],
        "depth": 1
      },
      {
        "path": [
          "core/file_14.py",
          "helpers/file_12.py",
          "utils/file_21.py"
        ],
        "depth": 2
      },
      {
        "path": [
          "models/file_8.py",
          "helpers/file_20.py",
          "controllers/file_11.py",
          "core/file_7.py"
        ],
        "depth": 3
      },
      {
        "path": [
          "controllers/file_24.py",
          "core/file_14.py",
          "core/file_7.py",
          "services/file_4.py",
          "services/file_26.py"
        ],
        "depth": 4
      },
      {
        "path": [
          "utils/file_25.py",
          "services/file_1.py",
          "models/file_13.py",
          "utils/file_2.py",
          "helpers/file_12.py",
          "core/file_14.py"
        ],
        "depth": 5
      }
    ]
  },
  "obfuscation": {
    "obfuscation_level": "high",
    "renamed_entities": {
      "entity_0": "ZuarDflDwD",
      "entity_1": "UBDwijoARh",
      "entity_2": "NHodlhwpAX",
      "entity_3": "PtFQKMXWYh",
      "entity_4": "svlUHcNUbT",
      "entity_5": "JhVnIMeFGQ",
      "entity_6": "rNMsJzUgEN",
      "entity_7": "iqbqmZKXql",
      "entity_8": "yrWTajOfNn",
      "entity_9": "eLBqecrOMO",
      "entity_10": "imfyEmHSyx",
      "entity_11": "AmesbLsZdW"
    },
    "moved_files": 4,
    "refactored_modules": 0
  },
  "ground_truth": {
    "root_cause": "stack_overflow in main processing logic",
    "fix_type": "memory_management",
    "must_find_files": [
      "services/file_1.py",
      "utils/file_2.py",
      "helpers/file_6.py",
      "core/file_7.py",
      "controllers/file_10.py"
    ],
    "should_find_files": [
      "helpers/file_3.py",
      "services/file_4.py",
      "helpers/file_12.py"
    ],
    "expected_behavior": {
      "should_not_error": true,
      "expected_output": "Correct processing result",
      "performance_threshold": 0.5002365526225221
    }
  },
  "test_artifacts": [
    {
      "file_name": "test_memory_issues_1.python",
      "test_code": "import unittest\n\nclass TestMemory_Issues(unittest.TestCase):\n    def test_scenario_1(self):\n        # Test for memory_issues\n        result = function_under_test(test_data)\n        self.assertEqual(result, expected_result)\n",
      "test_type": "e2e"
    },
    {
      "file_name": "test_memory_issues_2.python",
      "test_code": "import unittest\n\nclass TestMemory_Issues(unittest.TestCase):\n    def test_scenario_2(self):\n        # Test for memory_issues\n        result = function_under_test(test_data)\n        self.assertEqual(result, expected_result)\n",
      "test_type": "e2e"
    },
    {
      "file_name": "test_memory_issues_3.python",
      "test_code": "import unittest\n\nclass TestMemory_Issues(unittest.TestCase):\n    def test_scenario_3(self):\n        # Test for memory_issues\n        result = function_under_test(test_data)\n        self.assertEqual(result, expected_result)\n",
      "test_type": "e2e"
    }
  ],
  "error_artifacts": [
    {
      "error_type": "memory_issues",
      "error_message": "MemoryError: Out of memory",
      "stack_trace": "Traceback (most recent call last):\n  File \"main.py\", line 42, in <module>\n    result = process_data(input_data)\n  File \"processor.py\", line 15, in process_data\n    return transform(validate(data))\n  File \"validator.py\", line 8, in validate\n    raise ValueError(\"Invalid data\")\nValueError: Invalid data",
      "timestamp": "2025-08-07T02:22:50.894444"
    },
    {
      "error_type": "memory_issues",
      "error_message": "MemoryError: Out of memory",
      "stack_trace": "Traceback (most recent call last):\n  File \"main.py\", line 42, in <module>\n    result = process_data(input_data)\n  File \"processor.py\", line 15, in process_data\n    return transform(validate(data))\n  File \"validator.py\", line 8, in validate\n    raise ValueError(\"Invalid data\")\nValueError: Invalid data",
      "timestamp": "2025-08-07T02:22:50.894446"
    }
  ],
  "symptoms": [
    "Generic symptom"
  ],
  "error_location": {
    "file": "main.py",
    "line": 175,
    "function": "process_function",
    "module": "services"
  },
  "evaluation_criteria": {
    "must_find_files": [
      "services/file_1.py",
      "utils/file_2.py",
      "controllers/file_11.py"
    ],
    "should_find_files": [
      "helpers/file_6.py",
      "core/file_7.py"
    ],
    "retrieval_threshold": 0.75,
    "fix_validation": "must_pass_tests"
  }
}